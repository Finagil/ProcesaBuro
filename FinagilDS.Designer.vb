'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("FinagilDS"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class FinagilDS
    Inherits Global.System.Data.DataSet
    
    Private tableBC_BuroDatos As BC_BuroDatosDataTable
    
    Private tableFIRA_CAL As FIRA_CALDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("BC_BuroDatos")) Is Nothing) Then
                MyBase.Tables.Add(New BC_BuroDatosDataTable(ds.Tables("BC_BuroDatos")))
            End If
            If (Not (ds.Tables("FIRA_CAL")) Is Nothing) Then
                MyBase.Tables.Add(New FIRA_CALDataTable(ds.Tables("FIRA_CAL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BC_BuroDatos() As BC_BuroDatosDataTable
        Get
            Return Me.tableBC_BuroDatos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FIRA_CAL() As FIRA_CALDataTable
        Get
            Return Me.tableFIRA_CAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As FinagilDS = CType(MyBase.Clone,FinagilDS)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("BC_BuroDatos")) Is Nothing) Then
                MyBase.Tables.Add(New BC_BuroDatosDataTable(ds.Tables("BC_BuroDatos")))
            End If
            If (Not (ds.Tables("FIRA_CAL")) Is Nothing) Then
                MyBase.Tables.Add(New FIRA_CALDataTable(ds.Tables("FIRA_CAL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableBC_BuroDatos = CType(MyBase.Tables("BC_BuroDatos"),BC_BuroDatosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBC_BuroDatos) Is Nothing) Then
                Me.tableBC_BuroDatos.InitVars
            End If
        End If
        Me.tableFIRA_CAL = CType(MyBase.Tables("FIRA_CAL"),FIRA_CALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFIRA_CAL) Is Nothing) Then
                Me.tableFIRA_CAL.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "FinagilDS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/FinagilDS.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableBC_BuroDatos = New BC_BuroDatosDataTable()
        MyBase.Tables.Add(Me.tableBC_BuroDatos)
        Me.tableFIRA_CAL = New FIRA_CALDataTable()
        MyBase.Tables.Add(Me.tableFIRA_CAL)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBC_BuroDatos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFIRA_CAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As FinagilDS = New FinagilDS()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BC_BuroDatosRowChangeEventHandler(ByVal sender As Object, ByVal e As BC_BuroDatosRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FIRA_CALRowChangeEventHandler(ByVal sender As Object, ByVal e As FIRA_CALRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BC_BuroDatosDataTable
        Inherits Global.System.Data.TypedTableBase(Of BC_BuroDatosRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnRFC As Global.System.Data.DataColumn
        
        Private columnMes As Global.System.Data.DataColumn
        
        Private columnBK12_CLEAN As Global.System.Data.DataColumn
        
        Private columnBK12_NUM_CRED As Global.System.Data.DataColumn
        
        Private columnBK12_NUM_TC_ACT As Global.System.Data.DataColumn
        
        Private columnNBK12_NUM_CRED As Global.System.Data.DataColumn
        
        Private columnBK12_NUM_EXP_PAIDONTIME As Global.System.Data.DataColumn
        
        Private columnBK12_PCT_PROMT As Global.System.Data.DataColumn
        
        Private columnNBK12_PCT_PROMT As Global.System.Data.DataColumn
        
        Private columnBK12_PCT_SAT As Global.System.Data.DataColumn
        
        Private columnNBK12_PCT_SAT As Global.System.Data.DataColumn
        
        Private columnBK24_PCT_60PLUS As Global.System.Data.DataColumn
        
        Private columnNBK24_PCT_60PLUS As Global.System.Data.DataColumn
        
        Private columnNBK12_COMM_PCT_PLUS As Global.System.Data.DataColumn
        
        Private columnBK12_PCT_90PLUS As Global.System.Data.DataColumn
        
        Private columnBK12_DPD_PROM As Global.System.Data.DataColumn
        
        Private columnBK12_IND_QCRA As Global.System.Data.DataColumn
        
        Private columnBK12_MAX_CREDIT_AMT As Global.System.Data.DataColumn
        
        Private columnMONTHS_ON_FILE_BANKING As Global.System.Data.DataColumn
        
        Private columnMONTHS_SINCE_LAST_OPEN_BANKING As Global.System.Data.DataColumn
        
        Private columnBK_IND_PMOR As Global.System.Data.DataColumn
        
        Private columnBK24_IND_EXP As Global.System.Data.DataColumn
        
        Private column12_INST As Global.System.Data.DataColumn
        
        Private columnBK_DEUDA_TOT As Global.System.Data.DataColumn
        
        Private columnBK_DEUDA_CP As Global.System.Data.DataColumn
        
        Private columnNBK_DEUDA_TOT As Global.System.Data.DataColumn
        
        Private columnNBK_DEUDA_CP As Global.System.Data.DataColumn
        
        Private columnDEUDA_TOT As Global.System.Data.DataColumn
        
        Private columnDEUDA_TOT_CP As Global.System.Data.DataColumn
        
        Private columnBK12_PCT_SAT1 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BC_BuroDatos"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK12_CLEANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK12_CLEAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK12_NUM_CREDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK12_NUM_CRED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK12_NUM_TC_ACTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK12_NUM_TC_ACT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NBK12_NUM_CREDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNBK12_NUM_CRED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK12_NUM_EXP_PAIDONTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK12_NUM_EXP_PAIDONTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK12_PCT_PROMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK12_PCT_PROMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NBK12_PCT_PROMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNBK12_PCT_PROMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK12_PCT_SATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK12_PCT_SAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NBK12_PCT_SATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNBK12_PCT_SAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK24_PCT_60PLUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK24_PCT_60PLUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NBK24_PCT_60PLUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNBK24_PCT_60PLUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NBK12_COMM_PCT_PLUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNBK12_COMM_PCT_PLUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK12_PCT_90PLUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK12_PCT_90PLUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK12_DPD_PROMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK12_DPD_PROM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK12_IND_QCRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK12_IND_QCRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK12_MAX_CREDIT_AMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK12_MAX_CREDIT_AMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MONTHS_ON_FILE_BANKINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTHS_ON_FILE_BANKING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MONTHS_SINCE_LAST_OPEN_BANKINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTHS_SINCE_LAST_OPEN_BANKING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK_IND_PMORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK_IND_PMOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK24_IND_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK24_IND_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _12_INSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column12_INST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK_DEUDA_TOTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK_DEUDA_TOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK_DEUDA_CPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK_DEUDA_CP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NBK_DEUDA_TOTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNBK_DEUDA_TOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NBK_DEUDA_CPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNBK_DEUDA_CP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEUDA_TOTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEUDA_TOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEUDA_TOT_CPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEUDA_TOT_CP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK12_PCT_SAT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK12_PCT_SAT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BC_BuroDatosRow
            Get
                Return CType(Me.Rows(index),BC_BuroDatosRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BC_BuroDatosRowChanging As BC_BuroDatosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BC_BuroDatosRowChanged As BC_BuroDatosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BC_BuroDatosRowDeleting As BC_BuroDatosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BC_BuroDatosRowDeleted As BC_BuroDatosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBC_BuroDatosRow(ByVal row As BC_BuroDatosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBC_BuroDatosRow( _
                    ByVal RFC As String,  _
                    ByVal Mes As String,  _
                    ByVal BK12_CLEAN As String,  _
                    ByVal BK12_NUM_CRED As String,  _
                    ByVal BK12_NUM_TC_ACT As String,  _
                    ByVal NBK12_NUM_CRED As String,  _
                    ByVal BK12_NUM_EXP_PAIDONTIME As String,  _
                    ByVal BK12_PCT_PROMT As String,  _
                    ByVal NBK12_PCT_PROMT As String,  _
                    ByVal BK12_PCT_SAT() As Byte,  _
                    ByVal NBK12_PCT_SAT As String,  _
                    ByVal BK24_PCT_60PLUS As String,  _
                    ByVal NBK24_PCT_60PLUS As String,  _
                    ByVal NBK12_COMM_PCT_PLUS As String,  _
                    ByVal BK12_PCT_90PLUS As String,  _
                    ByVal BK12_DPD_PROM As String,  _
                    ByVal BK12_IND_QCRA As String,  _
                    ByVal BK12_MAX_CREDIT_AMT As String,  _
                    ByVal MONTHS_ON_FILE_BANKING As String,  _
                    ByVal MONTHS_SINCE_LAST_OPEN_BANKING As String,  _
                    ByVal BK_IND_PMOR As String,  _
                    ByVal BK24_IND_EXP As String,  _
                    ByVal _12_INST As String,  _
                    ByVal BK_DEUDA_TOT As String,  _
                    ByVal BK_DEUDA_CP As String,  _
                    ByVal NBK_DEUDA_TOT As String,  _
                    ByVal NBK_DEUDA_CP As String,  _
                    ByVal DEUDA_TOT As String,  _
                    ByVal DEUDA_TOT_CP As String,  _
                    ByVal BK12_PCT_SAT1 As String) As BC_BuroDatosRow
            Dim rowBC_BuroDatosRow As BC_BuroDatosRow = CType(Me.NewRow,BC_BuroDatosRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, RFC, Mes, BK12_CLEAN, BK12_NUM_CRED, BK12_NUM_TC_ACT, NBK12_NUM_CRED, BK12_NUM_EXP_PAIDONTIME, BK12_PCT_PROMT, NBK12_PCT_PROMT, BK12_PCT_SAT, NBK12_PCT_SAT, BK24_PCT_60PLUS, NBK24_PCT_60PLUS, NBK12_COMM_PCT_PLUS, BK12_PCT_90PLUS, BK12_DPD_PROM, BK12_IND_QCRA, BK12_MAX_CREDIT_AMT, MONTHS_ON_FILE_BANKING, MONTHS_SINCE_LAST_OPEN_BANKING, BK_IND_PMOR, BK24_IND_EXP, _12_INST, BK_DEUDA_TOT, BK_DEUDA_CP, NBK_DEUDA_TOT, NBK_DEUDA_CP, DEUDA_TOT, DEUDA_TOT_CP, BK12_PCT_SAT1}
            rowBC_BuroDatosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBC_BuroDatosRow)
            Return rowBC_BuroDatosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByid(ByVal id As Decimal) As BC_BuroDatosRow
            Return CType(Me.Rows.Find(New Object() {id}),BC_BuroDatosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BC_BuroDatosDataTable = CType(MyBase.Clone,BC_BuroDatosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BC_BuroDatosDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnRFC = MyBase.Columns("RFC")
            Me.columnMes = MyBase.Columns("Mes")
            Me.columnBK12_CLEAN = MyBase.Columns("BK12_CLEAN")
            Me.columnBK12_NUM_CRED = MyBase.Columns("BK12_NUM_CRED")
            Me.columnBK12_NUM_TC_ACT = MyBase.Columns("BK12_NUM_TC_ACT")
            Me.columnNBK12_NUM_CRED = MyBase.Columns("NBK12_NUM_CRED")
            Me.columnBK12_NUM_EXP_PAIDONTIME = MyBase.Columns("BK12_NUM_EXP_PAIDONTIME")
            Me.columnBK12_PCT_PROMT = MyBase.Columns("BK12_PCT_PROMT")
            Me.columnNBK12_PCT_PROMT = MyBase.Columns("NBK12_PCT_PROMT")
            Me.columnBK12_PCT_SAT = MyBase.Columns("BK12_PCT_SAT")
            Me.columnNBK12_PCT_SAT = MyBase.Columns("NBK12_PCT_SAT")
            Me.columnBK24_PCT_60PLUS = MyBase.Columns("BK24_PCT_60PLUS")
            Me.columnNBK24_PCT_60PLUS = MyBase.Columns("NBK24_PCT_60PLUS")
            Me.columnNBK12_COMM_PCT_PLUS = MyBase.Columns("NBK12_COMM_PCT_PLUS")
            Me.columnBK12_PCT_90PLUS = MyBase.Columns("BK12_PCT_90PLUS")
            Me.columnBK12_DPD_PROM = MyBase.Columns("BK12_DPD_PROM")
            Me.columnBK12_IND_QCRA = MyBase.Columns("BK12_IND_QCRA")
            Me.columnBK12_MAX_CREDIT_AMT = MyBase.Columns("BK12_MAX_CREDIT_AMT")
            Me.columnMONTHS_ON_FILE_BANKING = MyBase.Columns("MONTHS_ON_FILE_BANKING")
            Me.columnMONTHS_SINCE_LAST_OPEN_BANKING = MyBase.Columns("MONTHS_SINCE_LAST_OPEN_BANKING")
            Me.columnBK_IND_PMOR = MyBase.Columns("BK_IND_PMOR")
            Me.columnBK24_IND_EXP = MyBase.Columns("BK24_IND_EXP")
            Me.column12_INST = MyBase.Columns("12_INST")
            Me.columnBK_DEUDA_TOT = MyBase.Columns("BK_DEUDA_TOT")
            Me.columnBK_DEUDA_CP = MyBase.Columns("BK_DEUDA_CP")
            Me.columnNBK_DEUDA_TOT = MyBase.Columns("NBK_DEUDA_TOT")
            Me.columnNBK_DEUDA_CP = MyBase.Columns("NBK_DEUDA_CP")
            Me.columnDEUDA_TOT = MyBase.Columns("DEUDA_TOT")
            Me.columnDEUDA_TOT_CP = MyBase.Columns("DEUDA_TOT_CP")
            Me.columnBK12_PCT_SAT1 = MyBase.Columns("BK12_PCT_SAT1")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnRFC = New Global.System.Data.DataColumn("RFC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFC)
            Me.columnMes = New Global.System.Data.DataColumn("Mes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMes)
            Me.columnBK12_CLEAN = New Global.System.Data.DataColumn("BK12_CLEAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK12_CLEAN)
            Me.columnBK12_NUM_CRED = New Global.System.Data.DataColumn("BK12_NUM_CRED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK12_NUM_CRED)
            Me.columnBK12_NUM_TC_ACT = New Global.System.Data.DataColumn("BK12_NUM_TC_ACT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK12_NUM_TC_ACT)
            Me.columnNBK12_NUM_CRED = New Global.System.Data.DataColumn("NBK12_NUM_CRED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNBK12_NUM_CRED)
            Me.columnBK12_NUM_EXP_PAIDONTIME = New Global.System.Data.DataColumn("BK12_NUM_EXP_PAIDONTIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK12_NUM_EXP_PAIDONTIME)
            Me.columnBK12_PCT_PROMT = New Global.System.Data.DataColumn("BK12_PCT_PROMT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK12_PCT_PROMT)
            Me.columnNBK12_PCT_PROMT = New Global.System.Data.DataColumn("NBK12_PCT_PROMT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNBK12_PCT_PROMT)
            Me.columnBK12_PCT_SAT = New Global.System.Data.DataColumn("BK12_PCT_SAT", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK12_PCT_SAT)
            Me.columnNBK12_PCT_SAT = New Global.System.Data.DataColumn("NBK12_PCT_SAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNBK12_PCT_SAT)
            Me.columnBK24_PCT_60PLUS = New Global.System.Data.DataColumn("BK24_PCT_60PLUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK24_PCT_60PLUS)
            Me.columnNBK24_PCT_60PLUS = New Global.System.Data.DataColumn("NBK24_PCT_60PLUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNBK24_PCT_60PLUS)
            Me.columnNBK12_COMM_PCT_PLUS = New Global.System.Data.DataColumn("NBK12_COMM_PCT_PLUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNBK12_COMM_PCT_PLUS)
            Me.columnBK12_PCT_90PLUS = New Global.System.Data.DataColumn("BK12_PCT_90PLUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK12_PCT_90PLUS)
            Me.columnBK12_DPD_PROM = New Global.System.Data.DataColumn("BK12_DPD_PROM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK12_DPD_PROM)
            Me.columnBK12_IND_QCRA = New Global.System.Data.DataColumn("BK12_IND_QCRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK12_IND_QCRA)
            Me.columnBK12_MAX_CREDIT_AMT = New Global.System.Data.DataColumn("BK12_MAX_CREDIT_AMT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK12_MAX_CREDIT_AMT)
            Me.columnMONTHS_ON_FILE_BANKING = New Global.System.Data.DataColumn("MONTHS_ON_FILE_BANKING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTHS_ON_FILE_BANKING)
            Me.columnMONTHS_SINCE_LAST_OPEN_BANKING = New Global.System.Data.DataColumn("MONTHS_SINCE_LAST_OPEN_BANKING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTHS_SINCE_LAST_OPEN_BANKING)
            Me.columnBK_IND_PMOR = New Global.System.Data.DataColumn("BK_IND_PMOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK_IND_PMOR)
            Me.columnBK24_IND_EXP = New Global.System.Data.DataColumn("BK24_IND_EXP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK24_IND_EXP)
            Me.column12_INST = New Global.System.Data.DataColumn("12_INST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.column12_INST.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column12_INST")
            Me.column12_INST.ExtendedProperties.Add("Generator_UserColumnName", "12_INST")
            MyBase.Columns.Add(Me.column12_INST)
            Me.columnBK_DEUDA_TOT = New Global.System.Data.DataColumn("BK_DEUDA_TOT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK_DEUDA_TOT)
            Me.columnBK_DEUDA_CP = New Global.System.Data.DataColumn("BK_DEUDA_CP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK_DEUDA_CP)
            Me.columnNBK_DEUDA_TOT = New Global.System.Data.DataColumn("NBK_DEUDA_TOT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNBK_DEUDA_TOT)
            Me.columnNBK_DEUDA_CP = New Global.System.Data.DataColumn("NBK_DEUDA_CP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNBK_DEUDA_CP)
            Me.columnDEUDA_TOT = New Global.System.Data.DataColumn("DEUDA_TOT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEUDA_TOT)
            Me.columnDEUDA_TOT_CP = New Global.System.Data.DataColumn("DEUDA_TOT_CP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEUDA_TOT_CP)
            Me.columnBK12_PCT_SAT1 = New Global.System.Data.DataColumn("BK12_PCT_SAT1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK12_PCT_SAT1)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, true))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.AllowDBNull = false
            Me.columnid.ReadOnly = true
            Me.columnid.Unique = true
            Me.columnRFC.MaxLength = 13
            Me.columnMes.MaxLength = 8
            Me.columnBK12_CLEAN.MaxLength = 20
            Me.columnBK12_NUM_CRED.MaxLength = 20
            Me.columnBK12_NUM_TC_ACT.MaxLength = 20
            Me.columnNBK12_NUM_CRED.MaxLength = 20
            Me.columnBK12_NUM_EXP_PAIDONTIME.MaxLength = 20
            Me.columnBK12_PCT_PROMT.MaxLength = 20
            Me.columnNBK12_PCT_PROMT.MaxLength = 20
            Me.columnNBK12_PCT_SAT.MaxLength = 20
            Me.columnBK24_PCT_60PLUS.MaxLength = 20
            Me.columnNBK24_PCT_60PLUS.MaxLength = 20
            Me.columnNBK12_COMM_PCT_PLUS.MaxLength = 20
            Me.columnBK12_PCT_90PLUS.MaxLength = 20
            Me.columnBK12_DPD_PROM.MaxLength = 20
            Me.columnBK12_IND_QCRA.MaxLength = 20
            Me.columnBK12_MAX_CREDIT_AMT.MaxLength = 20
            Me.columnMONTHS_ON_FILE_BANKING.MaxLength = 20
            Me.columnMONTHS_SINCE_LAST_OPEN_BANKING.MaxLength = 20
            Me.columnBK_IND_PMOR.MaxLength = 20
            Me.columnBK24_IND_EXP.MaxLength = 20
            Me.column12_INST.MaxLength = 20
            Me.columnBK_DEUDA_TOT.MaxLength = 20
            Me.columnBK_DEUDA_CP.MaxLength = 20
            Me.columnNBK_DEUDA_TOT.MaxLength = 20
            Me.columnNBK_DEUDA_CP.MaxLength = 20
            Me.columnDEUDA_TOT.MaxLength = 20
            Me.columnDEUDA_TOT_CP.MaxLength = 20
            Me.columnBK12_PCT_SAT1.Caption = "BK12_PCT_SAT"
            Me.columnBK12_PCT_SAT1.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBC_BuroDatosRow() As BC_BuroDatosRow
            Return CType(Me.NewRow,BC_BuroDatosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BC_BuroDatosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BC_BuroDatosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BC_BuroDatosRowChangedEvent) Is Nothing) Then
                RaiseEvent BC_BuroDatosRowChanged(Me, New BC_BuroDatosRowChangeEvent(CType(e.Row,BC_BuroDatosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BC_BuroDatosRowChangingEvent) Is Nothing) Then
                RaiseEvent BC_BuroDatosRowChanging(Me, New BC_BuroDatosRowChangeEvent(CType(e.Row,BC_BuroDatosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BC_BuroDatosRowDeletedEvent) Is Nothing) Then
                RaiseEvent BC_BuroDatosRowDeleted(Me, New BC_BuroDatosRowChangeEvent(CType(e.Row,BC_BuroDatosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BC_BuroDatosRowDeletingEvent) Is Nothing) Then
                RaiseEvent BC_BuroDatosRowDeleting(Me, New BC_BuroDatosRowChangeEvent(CType(e.Row,BC_BuroDatosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBC_BuroDatosRow(ByVal row As BC_BuroDatosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As FinagilDS = New FinagilDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BC_BuroDatosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FIRA_CALDataTable
        Inherits Global.System.Data.TypedTableBase(Of FIRA_CALRow)
        
        Private columnIDCONSULTA As Global.System.Data.DataColumn
        
        Private columnTIPORESPUESTA As Global.System.Data.DataColumn
        
        Private columnFOLIO As Global.System.Data.DataColumn
        
        Private columnFECHA_CONSULTA As Global.System.Data.DataColumn
        
        Private columnRFC As Global.System.Data.DataColumn
        
        Private columnPRIMERNOMBRE As Global.System.Data.DataColumn
        
        Private columnSEGUNDONOMBRE As Global.System.Data.DataColumn
        
        Private columnAPELLIDOPATERNO As Global.System.Data.DataColumn
        
        Private columnAPELLIDOMATERNO As Global.System.Data.DataColumn
        
        Private columnIDCARACTERISTICA As Global.System.Data.DataColumn
        
        Private columnNOMBRECARACTERISTICA As Global.System.Data.DataColumn
        
        Private columnVALORCARACTERISTICA As Global.System.Data.DataColumn
        
        Private columnERRORCARACTERISTICA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FIRA_CAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDCONSULTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDCONSULTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPORESPUESTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPORESPUESTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FOLIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFOLIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHA_CONSULTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_CONSULTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRIMERNOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIMERNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEGUNDONOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEGUNDONOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APELLIDOPATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDOPATERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APELLIDOMATERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDOMATERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDCARACTERISTICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDCARACTERISTICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBRECARACTERISTICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRECARACTERISTICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VALORCARACTERISTICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALORCARACTERISTICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ERRORCARACTERISTICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnERRORCARACTERISTICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FIRA_CALRow
            Get
                Return CType(Me.Rows(index),FIRA_CALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FIRA_CALRowChanging As FIRA_CALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FIRA_CALRowChanged As FIRA_CALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FIRA_CALRowDeleting As FIRA_CALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FIRA_CALRowDeleted As FIRA_CALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFIRA_CALRow(ByVal row As FIRA_CALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFIRA_CALRow(ByVal IDCONSULTA As String, ByVal TIPORESPUESTA As String, ByVal FOLIO As String, ByVal FECHA_CONSULTA As String, ByVal RFC As String, ByVal PRIMERNOMBRE As String, ByVal SEGUNDONOMBRE As String, ByVal APELLIDOPATERNO As String, ByVal APELLIDOMATERNO As String, ByVal IDCARACTERISTICA As String, ByVal NOMBRECARACTERISTICA As String, ByVal VALORCARACTERISTICA As String, ByVal ERRORCARACTERISTICA As String) As FIRA_CALRow
            Dim rowFIRA_CALRow As FIRA_CALRow = CType(Me.NewRow,FIRA_CALRow)
            Dim columnValuesArray() As Object = New Object() {IDCONSULTA, TIPORESPUESTA, FOLIO, FECHA_CONSULTA, RFC, PRIMERNOMBRE, SEGUNDONOMBRE, APELLIDOPATERNO, APELLIDOMATERNO, IDCARACTERISTICA, NOMBRECARACTERISTICA, VALORCARACTERISTICA, ERRORCARACTERISTICA}
            rowFIRA_CALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFIRA_CALRow)
            Return rowFIRA_CALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByIDCONSULTA(ByVal IDCONSULTA As String) As FIRA_CALRow
            Return CType(Me.Rows.Find(New Object() {IDCONSULTA}),FIRA_CALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FIRA_CALDataTable = CType(MyBase.Clone,FIRA_CALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FIRA_CALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnIDCONSULTA = MyBase.Columns("IDCONSULTA")
            Me.columnTIPORESPUESTA = MyBase.Columns("TIPORESPUESTA")
            Me.columnFOLIO = MyBase.Columns("FOLIO")
            Me.columnFECHA_CONSULTA = MyBase.Columns("FECHA_CONSULTA")
            Me.columnRFC = MyBase.Columns("RFC")
            Me.columnPRIMERNOMBRE = MyBase.Columns("PRIMERNOMBRE")
            Me.columnSEGUNDONOMBRE = MyBase.Columns("SEGUNDONOMBRE")
            Me.columnAPELLIDOPATERNO = MyBase.Columns("APELLIDOPATERNO")
            Me.columnAPELLIDOMATERNO = MyBase.Columns("APELLIDOMATERNO")
            Me.columnIDCARACTERISTICA = MyBase.Columns("IDCARACTERISTICA")
            Me.columnNOMBRECARACTERISTICA = MyBase.Columns("NOMBRECARACTERISTICA")
            Me.columnVALORCARACTERISTICA = MyBase.Columns("VALORCARACTERISTICA")
            Me.columnERRORCARACTERISTICA = MyBase.Columns("ERRORCARACTERISTICA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnIDCONSULTA = New Global.System.Data.DataColumn("IDCONSULTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDCONSULTA)
            Me.columnTIPORESPUESTA = New Global.System.Data.DataColumn("TIPORESPUESTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPORESPUESTA)
            Me.columnFOLIO = New Global.System.Data.DataColumn("FOLIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFOLIO)
            Me.columnFECHA_CONSULTA = New Global.System.Data.DataColumn("FECHA_CONSULTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_CONSULTA)
            Me.columnRFC = New Global.System.Data.DataColumn("RFC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFC)
            Me.columnPRIMERNOMBRE = New Global.System.Data.DataColumn("PRIMERNOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIMERNOMBRE)
            Me.columnSEGUNDONOMBRE = New Global.System.Data.DataColumn("SEGUNDONOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEGUNDONOMBRE)
            Me.columnAPELLIDOPATERNO = New Global.System.Data.DataColumn("APELLIDOPATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDOPATERNO)
            Me.columnAPELLIDOMATERNO = New Global.System.Data.DataColumn("APELLIDOMATERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDOMATERNO)
            Me.columnIDCARACTERISTICA = New Global.System.Data.DataColumn("IDCARACTERISTICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDCARACTERISTICA)
            Me.columnNOMBRECARACTERISTICA = New Global.System.Data.DataColumn("NOMBRECARACTERISTICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRECARACTERISTICA)
            Me.columnVALORCARACTERISTICA = New Global.System.Data.DataColumn("VALORCARACTERISTICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALORCARACTERISTICA)
            Me.columnERRORCARACTERISTICA = New Global.System.Data.DataColumn("ERRORCARACTERISTICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnERRORCARACTERISTICA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnIDCONSULTA}, true))
            Me.columnIDCONSULTA.AllowDBNull = false
            Me.columnIDCONSULTA.Unique = true
            Me.columnIDCONSULTA.MaxLength = 50
            Me.columnTIPORESPUESTA.MaxLength = 50
            Me.columnFOLIO.AllowDBNull = false
            Me.columnFOLIO.MaxLength = 50
            Me.columnFECHA_CONSULTA.MaxLength = 50
            Me.columnRFC.MaxLength = 50
            Me.columnPRIMERNOMBRE.MaxLength = 150
            Me.columnSEGUNDONOMBRE.MaxLength = 150
            Me.columnAPELLIDOPATERNO.MaxLength = 150
            Me.columnAPELLIDOMATERNO.MaxLength = 150
            Me.columnIDCARACTERISTICA.AllowDBNull = false
            Me.columnIDCARACTERISTICA.MaxLength = 50
            Me.columnNOMBRECARACTERISTICA.MaxLength = 50
            Me.columnVALORCARACTERISTICA.MaxLength = 50
            Me.columnERRORCARACTERISTICA.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFIRA_CALRow() As FIRA_CALRow
            Return CType(Me.NewRow,FIRA_CALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FIRA_CALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FIRA_CALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FIRA_CALRowChangedEvent) Is Nothing) Then
                RaiseEvent FIRA_CALRowChanged(Me, New FIRA_CALRowChangeEvent(CType(e.Row,FIRA_CALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FIRA_CALRowChangingEvent) Is Nothing) Then
                RaiseEvent FIRA_CALRowChanging(Me, New FIRA_CALRowChangeEvent(CType(e.Row,FIRA_CALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FIRA_CALRowDeletedEvent) Is Nothing) Then
                RaiseEvent FIRA_CALRowDeleted(Me, New FIRA_CALRowChangeEvent(CType(e.Row,FIRA_CALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FIRA_CALRowDeletingEvent) Is Nothing) Then
                RaiseEvent FIRA_CALRowDeleting(Me, New FIRA_CALRowChangeEvent(CType(e.Row,FIRA_CALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFIRA_CALRow(ByVal row As FIRA_CALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As FinagilDS = New FinagilDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FIRA_CALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BC_BuroDatosRow
        Inherits Global.System.Data.DataRow
        
        Private tableBC_BuroDatos As BC_BuroDatosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBC_BuroDatos = CType(Me.Table,BC_BuroDatosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property id() As Decimal
            Get
                Return CType(Me(Me.tableBC_BuroDatos.idColumn),Decimal)
            End Get
            Set
                Me(Me.tableBC_BuroDatos.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RFC() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.RFCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RFC' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.RFCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mes() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.MesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Mes' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.MesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK12_CLEAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK12_CLEANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK12_CLEAN' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK12_CLEANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK12_NUM_CRED() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK12_NUM_CREDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK12_NUM_CRED' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK12_NUM_CREDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK12_NUM_TC_ACT() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK12_NUM_TC_ACTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK12_NUM_TC_ACT' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK12_NUM_TC_ACTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NBK12_NUM_CRED() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.NBK12_NUM_CREDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NBK12_NUM_CRED' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.NBK12_NUM_CREDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK12_NUM_EXP_PAIDONTIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK12_NUM_EXP_PAIDONTIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK12_NUM_EXP_PAIDONTIME' de la tabla 'BC_BuroDatos' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK12_NUM_EXP_PAIDONTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK12_PCT_PROMT() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK12_PCT_PROMTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK12_PCT_PROMT' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK12_PCT_PROMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NBK12_PCT_PROMT() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.NBK12_PCT_PROMTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NBK12_PCT_PROMT' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.NBK12_PCT_PROMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK12_PCT_SAT() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK12_PCT_SATColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK12_PCT_SAT' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK12_PCT_SATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NBK12_PCT_SAT() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.NBK12_PCT_SATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NBK12_PCT_SAT' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.NBK12_PCT_SATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK24_PCT_60PLUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK24_PCT_60PLUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK24_PCT_60PLUS' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK24_PCT_60PLUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NBK24_PCT_60PLUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.NBK24_PCT_60PLUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NBK24_PCT_60PLUS' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.NBK24_PCT_60PLUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NBK12_COMM_PCT_PLUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.NBK12_COMM_PCT_PLUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NBK12_COMM_PCT_PLUS' de la tabla 'BC_BuroDatos' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.NBK12_COMM_PCT_PLUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK12_PCT_90PLUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK12_PCT_90PLUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK12_PCT_90PLUS' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK12_PCT_90PLUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK12_DPD_PROM() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK12_DPD_PROMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK12_DPD_PROM' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK12_DPD_PROMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK12_IND_QCRA() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK12_IND_QCRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK12_IND_QCRA' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK12_IND_QCRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK12_MAX_CREDIT_AMT() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK12_MAX_CREDIT_AMTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK12_MAX_CREDIT_AMT' de la tabla 'BC_BuroDatos' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK12_MAX_CREDIT_AMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONTHS_ON_FILE_BANKING() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.MONTHS_ON_FILE_BANKINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MONTHS_ON_FILE_BANKING' de la tabla 'BC_BuroDatos' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.MONTHS_ON_FILE_BANKINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONTHS_SINCE_LAST_OPEN_BANKING() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.MONTHS_SINCE_LAST_OPEN_BANKINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MONTHS_SINCE_LAST_OPEN_BANKING' de la tabla 'BC_BuroDatos"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.MONTHS_SINCE_LAST_OPEN_BANKINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK_IND_PMOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK_IND_PMORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK_IND_PMOR' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK_IND_PMORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK24_IND_EXP() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK24_IND_EXPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK24_IND_EXP' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK24_IND_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _12_INST() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos._12_INSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna '12_INST' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos._12_INSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK_DEUDA_TOT() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK_DEUDA_TOTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK_DEUDA_TOT' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK_DEUDA_TOTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK_DEUDA_CP() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK_DEUDA_CPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK_DEUDA_CP' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK_DEUDA_CPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NBK_DEUDA_TOT() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.NBK_DEUDA_TOTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NBK_DEUDA_TOT' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.NBK_DEUDA_TOTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NBK_DEUDA_CP() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.NBK_DEUDA_CPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NBK_DEUDA_CP' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.NBK_DEUDA_CPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEUDA_TOT() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.DEUDA_TOTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEUDA_TOT' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.DEUDA_TOTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEUDA_TOT_CP() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.DEUDA_TOT_CPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEUDA_TOT_CP' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.DEUDA_TOT_CPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BK12_PCT_SAT1() As String
            Get
                Try 
                    Return CType(Me(Me.tableBC_BuroDatos.BK12_PCT_SAT1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BK12_PCT_SAT1' de la tabla 'BC_BuroDatos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBC_BuroDatos.BK12_PCT_SAT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRFCNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.RFCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRFCNull()
            Me(Me.tableBC_BuroDatos.RFCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMesNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.MesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMesNull()
            Me(Me.tableBC_BuroDatos.MesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK12_CLEANNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK12_CLEANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK12_CLEANNull()
            Me(Me.tableBC_BuroDatos.BK12_CLEANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK12_NUM_CREDNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK12_NUM_CREDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK12_NUM_CREDNull()
            Me(Me.tableBC_BuroDatos.BK12_NUM_CREDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK12_NUM_TC_ACTNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK12_NUM_TC_ACTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK12_NUM_TC_ACTNull()
            Me(Me.tableBC_BuroDatos.BK12_NUM_TC_ACTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNBK12_NUM_CREDNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.NBK12_NUM_CREDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNBK12_NUM_CREDNull()
            Me(Me.tableBC_BuroDatos.NBK12_NUM_CREDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK12_NUM_EXP_PAIDONTIMENull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK12_NUM_EXP_PAIDONTIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK12_NUM_EXP_PAIDONTIMENull()
            Me(Me.tableBC_BuroDatos.BK12_NUM_EXP_PAIDONTIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK12_PCT_PROMTNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK12_PCT_PROMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK12_PCT_PROMTNull()
            Me(Me.tableBC_BuroDatos.BK12_PCT_PROMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNBK12_PCT_PROMTNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.NBK12_PCT_PROMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNBK12_PCT_PROMTNull()
            Me(Me.tableBC_BuroDatos.NBK12_PCT_PROMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK12_PCT_SATNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK12_PCT_SATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK12_PCT_SATNull()
            Me(Me.tableBC_BuroDatos.BK12_PCT_SATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNBK12_PCT_SATNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.NBK12_PCT_SATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNBK12_PCT_SATNull()
            Me(Me.tableBC_BuroDatos.NBK12_PCT_SATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK24_PCT_60PLUSNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK24_PCT_60PLUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK24_PCT_60PLUSNull()
            Me(Me.tableBC_BuroDatos.BK24_PCT_60PLUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNBK24_PCT_60PLUSNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.NBK24_PCT_60PLUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNBK24_PCT_60PLUSNull()
            Me(Me.tableBC_BuroDatos.NBK24_PCT_60PLUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNBK12_COMM_PCT_PLUSNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.NBK12_COMM_PCT_PLUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNBK12_COMM_PCT_PLUSNull()
            Me(Me.tableBC_BuroDatos.NBK12_COMM_PCT_PLUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK12_PCT_90PLUSNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK12_PCT_90PLUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK12_PCT_90PLUSNull()
            Me(Me.tableBC_BuroDatos.BK12_PCT_90PLUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK12_DPD_PROMNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK12_DPD_PROMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK12_DPD_PROMNull()
            Me(Me.tableBC_BuroDatos.BK12_DPD_PROMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK12_IND_QCRANull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK12_IND_QCRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK12_IND_QCRANull()
            Me(Me.tableBC_BuroDatos.BK12_IND_QCRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK12_MAX_CREDIT_AMTNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK12_MAX_CREDIT_AMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK12_MAX_CREDIT_AMTNull()
            Me(Me.tableBC_BuroDatos.BK12_MAX_CREDIT_AMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMONTHS_ON_FILE_BANKINGNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.MONTHS_ON_FILE_BANKINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMONTHS_ON_FILE_BANKINGNull()
            Me(Me.tableBC_BuroDatos.MONTHS_ON_FILE_BANKINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMONTHS_SINCE_LAST_OPEN_BANKINGNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.MONTHS_SINCE_LAST_OPEN_BANKINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMONTHS_SINCE_LAST_OPEN_BANKINGNull()
            Me(Me.tableBC_BuroDatos.MONTHS_SINCE_LAST_OPEN_BANKINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK_IND_PMORNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK_IND_PMORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK_IND_PMORNull()
            Me(Me.tableBC_BuroDatos.BK_IND_PMORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK24_IND_EXPNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK24_IND_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK24_IND_EXPNull()
            Me(Me.tableBC_BuroDatos.BK24_IND_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_12_INSTNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos._12_INSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_12_INSTNull()
            Me(Me.tableBC_BuroDatos._12_INSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK_DEUDA_TOTNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK_DEUDA_TOTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK_DEUDA_TOTNull()
            Me(Me.tableBC_BuroDatos.BK_DEUDA_TOTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK_DEUDA_CPNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK_DEUDA_CPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK_DEUDA_CPNull()
            Me(Me.tableBC_BuroDatos.BK_DEUDA_CPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNBK_DEUDA_TOTNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.NBK_DEUDA_TOTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNBK_DEUDA_TOTNull()
            Me(Me.tableBC_BuroDatos.NBK_DEUDA_TOTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNBK_DEUDA_CPNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.NBK_DEUDA_CPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNBK_DEUDA_CPNull()
            Me(Me.tableBC_BuroDatos.NBK_DEUDA_CPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEUDA_TOTNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.DEUDA_TOTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEUDA_TOTNull()
            Me(Me.tableBC_BuroDatos.DEUDA_TOTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEUDA_TOT_CPNull() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.DEUDA_TOT_CPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEUDA_TOT_CPNull()
            Me(Me.tableBC_BuroDatos.DEUDA_TOT_CPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBK12_PCT_SAT1Null() As Boolean
            Return Me.IsNull(Me.tableBC_BuroDatos.BK12_PCT_SAT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBK12_PCT_SAT1Null()
            Me(Me.tableBC_BuroDatos.BK12_PCT_SAT1Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FIRA_CALRow
        Inherits Global.System.Data.DataRow
        
        Private tableFIRA_CAL As FIRA_CALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFIRA_CAL = CType(Me.Table,FIRA_CALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDCONSULTA() As String
            Get
                Return CType(Me(Me.tableFIRA_CAL.IDCONSULTAColumn),String)
            End Get
            Set
                Me(Me.tableFIRA_CAL.IDCONSULTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPORESPUESTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFIRA_CAL.TIPORESPUESTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPORESPUESTA' de la tabla 'FIRA_CAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFIRA_CAL.TIPORESPUESTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FOLIO() As String
            Get
                Return CType(Me(Me.tableFIRA_CAL.FOLIOColumn),String)
            End Get
            Set
                Me(Me.tableFIRA_CAL.FOLIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHA_CONSULTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFIRA_CAL.FECHA_CONSULTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_CONSULTA' de la tabla 'FIRA_CAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFIRA_CAL.FECHA_CONSULTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RFC() As String
            Get
                Try 
                    Return CType(Me(Me.tableFIRA_CAL.RFCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RFC' de la tabla 'FIRA_CAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFIRA_CAL.RFCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRIMERNOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFIRA_CAL.PRIMERNOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRIMERNOMBRE' de la tabla 'FIRA_CAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFIRA_CAL.PRIMERNOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEGUNDONOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFIRA_CAL.SEGUNDONOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEGUNDONOMBRE' de la tabla 'FIRA_CAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFIRA_CAL.SEGUNDONOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APELLIDOPATERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFIRA_CAL.APELLIDOPATERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'APELLIDOPATERNO' de la tabla 'FIRA_CAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFIRA_CAL.APELLIDOPATERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APELLIDOMATERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFIRA_CAL.APELLIDOMATERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'APELLIDOMATERNO' de la tabla 'FIRA_CAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFIRA_CAL.APELLIDOMATERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IDCARACTERISTICA() As String
            Get
                Return CType(Me(Me.tableFIRA_CAL.IDCARACTERISTICAColumn),String)
            End Get
            Set
                Me(Me.tableFIRA_CAL.IDCARACTERISTICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRECARACTERISTICA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFIRA_CAL.NOMBRECARACTERISTICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRECARACTERISTICA' de la tabla 'FIRA_CAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFIRA_CAL.NOMBRECARACTERISTICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VALORCARACTERISTICA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFIRA_CAL.VALORCARACTERISTICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VALORCARACTERISTICA' de la tabla 'FIRA_CAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFIRA_CAL.VALORCARACTERISTICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ERRORCARACTERISTICA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFIRA_CAL.ERRORCARACTERISTICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ERRORCARACTERISTICA' de la tabla 'FIRA_CAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFIRA_CAL.ERRORCARACTERISTICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPORESPUESTANull() As Boolean
            Return Me.IsNull(Me.tableFIRA_CAL.TIPORESPUESTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPORESPUESTANull()
            Me(Me.tableFIRA_CAL.TIPORESPUESTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHA_CONSULTANull() As Boolean
            Return Me.IsNull(Me.tableFIRA_CAL.FECHA_CONSULTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHA_CONSULTANull()
            Me(Me.tableFIRA_CAL.FECHA_CONSULTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRFCNull() As Boolean
            Return Me.IsNull(Me.tableFIRA_CAL.RFCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRFCNull()
            Me(Me.tableFIRA_CAL.RFCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRIMERNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableFIRA_CAL.PRIMERNOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRIMERNOMBRENull()
            Me(Me.tableFIRA_CAL.PRIMERNOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSEGUNDONOMBRENull() As Boolean
            Return Me.IsNull(Me.tableFIRA_CAL.SEGUNDONOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSEGUNDONOMBRENull()
            Me(Me.tableFIRA_CAL.SEGUNDONOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPELLIDOPATERNONull() As Boolean
            Return Me.IsNull(Me.tableFIRA_CAL.APELLIDOPATERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPELLIDOPATERNONull()
            Me(Me.tableFIRA_CAL.APELLIDOPATERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPELLIDOMATERNONull() As Boolean
            Return Me.IsNull(Me.tableFIRA_CAL.APELLIDOMATERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPELLIDOMATERNONull()
            Me(Me.tableFIRA_CAL.APELLIDOMATERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRECARACTERISTICANull() As Boolean
            Return Me.IsNull(Me.tableFIRA_CAL.NOMBRECARACTERISTICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRECARACTERISTICANull()
            Me(Me.tableFIRA_CAL.NOMBRECARACTERISTICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVALORCARACTERISTICANull() As Boolean
            Return Me.IsNull(Me.tableFIRA_CAL.VALORCARACTERISTICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVALORCARACTERISTICANull()
            Me(Me.tableFIRA_CAL.VALORCARACTERISTICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsERRORCARACTERISTICANull() As Boolean
            Return Me.IsNull(Me.tableFIRA_CAL.ERRORCARACTERISTICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetERRORCARACTERISTICANull()
            Me(Me.tableFIRA_CAL.ERRORCARACTERISTICAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class BC_BuroDatosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BC_BuroDatosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As BC_BuroDatosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As BC_BuroDatosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FIRA_CALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FIRA_CALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FIRA_CALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FIRA_CALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace FinagilDSTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BC_BuroDatosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BC_BuroDatos"
            tableMapping.ColumnMappings.Add("id", "id")
            tableMapping.ColumnMappings.Add("RFC", "RFC")
            tableMapping.ColumnMappings.Add("Mes", "Mes")
            tableMapping.ColumnMappings.Add("BK12_CLEAN", "BK12_CLEAN")
            tableMapping.ColumnMappings.Add("BK12_NUM_CRED", "BK12_NUM_CRED")
            tableMapping.ColumnMappings.Add("BK12_NUM_TC_ACT", "BK12_NUM_TC_ACT")
            tableMapping.ColumnMappings.Add("NBK12_NUM_CRED", "NBK12_NUM_CRED")
            tableMapping.ColumnMappings.Add("BK12_NUM_EXP_PAIDONTIME", "BK12_NUM_EXP_PAIDONTIME")
            tableMapping.ColumnMappings.Add("BK12_PCT_PROMT", "BK12_PCT_PROMT")
            tableMapping.ColumnMappings.Add("NBK12_PCT_PROMT", "NBK12_PCT_PROMT")
            tableMapping.ColumnMappings.Add("NBK12_PCT_SAT", "NBK12_PCT_SAT")
            tableMapping.ColumnMappings.Add("BK24_PCT_60PLUS", "BK24_PCT_60PLUS")
            tableMapping.ColumnMappings.Add("NBK24_PCT_60PLUS", "NBK24_PCT_60PLUS")
            tableMapping.ColumnMappings.Add("NBK12_COMM_PCT_PLUS", "NBK12_COMM_PCT_PLUS")
            tableMapping.ColumnMappings.Add("BK12_PCT_90PLUS", "BK12_PCT_90PLUS")
            tableMapping.ColumnMappings.Add("BK12_DPD_PROM", "BK12_DPD_PROM")
            tableMapping.ColumnMappings.Add("BK12_IND_QCRA", "BK12_IND_QCRA")
            tableMapping.ColumnMappings.Add("BK12_MAX_CREDIT_AMT", "BK12_MAX_CREDIT_AMT")
            tableMapping.ColumnMappings.Add("MONTHS_ON_FILE_BANKING", "MONTHS_ON_FILE_BANKING")
            tableMapping.ColumnMappings.Add("MONTHS_SINCE_LAST_OPEN_BANKING", "MONTHS_SINCE_LAST_OPEN_BANKING")
            tableMapping.ColumnMappings.Add("BK_IND_PMOR", "BK_IND_PMOR")
            tableMapping.ColumnMappings.Add("BK24_IND_EXP", "BK24_IND_EXP")
            tableMapping.ColumnMappings.Add("12_INST", "12_INST")
            tableMapping.ColumnMappings.Add("BK_DEUDA_TOT", "BK_DEUDA_TOT")
            tableMapping.ColumnMappings.Add("BK_DEUDA_CP", "BK_DEUDA_CP")
            tableMapping.ColumnMappings.Add("NBK_DEUDA_TOT", "NBK_DEUDA_TOT")
            tableMapping.ColumnMappings.Add("NBK_DEUDA_CP", "NBK_DEUDA_CP")
            tableMapping.ColumnMappings.Add("DEUDA_TOT", "DEUDA_TOT")
            tableMapping.ColumnMappings.Add("DEUDA_TOT_CP", "DEUDA_TOT_CP")
            tableMapping.ColumnMappings.Add("BK12_PCT_SAT", "BK12_PCT_SAT1")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BC_BuroDatos] WHERE (([id] = @Original_id) AND ((@IsNull_RFC ="& _ 
                " 1 AND [RFC] IS NULL) OR ([RFC] = @Original_RFC)) AND ((@IsNull_Mes = 1 AND [Mes"& _ 
                "] IS NULL) OR ([Mes] = @Original_Mes)) AND ((@IsNull_BK12_CLEAN = 1 AND [BK12_CL"& _ 
                "EAN] IS NULL) OR ([BK12_CLEAN] = @Original_BK12_CLEAN)) AND ((@IsNull_BK12_NUM_C"& _ 
                "RED = 1 AND [BK12_NUM_CRED] IS NULL) OR ([BK12_NUM_CRED] = @Original_BK12_NUM_CR"& _ 
                "ED)) AND ((@IsNull_BK12_NUM_TC_ACT = 1 AND [BK12_NUM_TC_ACT] IS NULL) OR ([BK12_"& _ 
                "NUM_TC_ACT] = @Original_BK12_NUM_TC_ACT)) AND ((@IsNull_NBK12_NUM_CRED = 1 AND ["& _ 
                "NBK12_NUM_CRED] IS NULL) OR ([NBK12_NUM_CRED] = @Original_NBK12_NUM_CRED)) AND ("& _ 
                "(@IsNull_BK12_NUM_EXP_PAIDONTIME = 1 AND [BK12_NUM_EXP_PAIDONTIME] IS NULL) OR ("& _ 
                "[BK12_NUM_EXP_PAIDONTIME] = @Original_BK12_NUM_EXP_PAIDONTIME)) AND ((@IsNull_BK"& _ 
                "12_PCT_PROMT = 1 AND [BK12_PCT_PROMT] IS NULL) OR ([BK12_PCT_PROMT] = @Original_"& _ 
                "BK12_PCT_PROMT)) AND ((@IsNull_NBK12_PCT_PROMT = 1 AND [NBK12_PCT_PROMT] IS NULL"& _ 
                ") OR ([NBK12_PCT_PROMT] = @Original_NBK12_PCT_PROMT)) AND ((@IsNull_BK12_PCT_SAT"& _ 
                " = 1 AND [BK12_PCT_SAT] IS NULL) OR ([BK12_PCT_SAT] = @Original_BK12_PCT_SAT)) A"& _ 
                "ND ((@IsNull_NBK12_PCT_SAT = 1 AND [NBK12_PCT_SAT] IS NULL) OR ([NBK12_PCT_SAT] "& _ 
                "= @Original_NBK12_PCT_SAT)) AND ((@IsNull_BK24_PCT_60PLUS = 1 AND [BK24_PCT_60PL"& _ 
                "US] IS NULL) OR ([BK24_PCT_60PLUS] = @Original_BK24_PCT_60PLUS)) AND ((@IsNull_N"& _ 
                "BK24_PCT_60PLUS = 1 AND [NBK24_PCT_60PLUS] IS NULL) OR ([NBK24_PCT_60PLUS] = @Or"& _ 
                "iginal_NBK24_PCT_60PLUS)) AND ((@IsNull_NBK12_COMM_PCT_PLUS = 1 AND [NBK12_COMM_"& _ 
                "PCT_PLUS] IS NULL) OR ([NBK12_COMM_PCT_PLUS] = @Original_NBK12_COMM_PCT_PLUS)) A"& _ 
                "ND ((@IsNull_BK12_PCT_90PLUS = 1 AND [BK12_PCT_90PLUS] IS NULL) OR ([BK12_PCT_90"& _ 
                "PLUS] = @Original_BK12_PCT_90PLUS)) AND ((@IsNull_BK12_DPD_PROM = 1 AND [BK12_DP"& _ 
                "D_PROM] IS NULL) OR ([BK12_DPD_PROM] = @Original_BK12_DPD_PROM)) AND ((@IsNull_B"& _ 
                "K12_IND_QCRA = 1 AND [BK12_IND_QCRA] IS NULL) OR ([BK12_IND_QCRA] = @Original_BK"& _ 
                "12_IND_QCRA)) AND ((@IsNull_BK12_MAX_CREDIT_AMT = 1 AND [BK12_MAX_CREDIT_AMT] IS"& _ 
                " NULL) OR ([BK12_MAX_CREDIT_AMT] = @Original_BK12_MAX_CREDIT_AMT)) AND ((@IsNull"& _ 
                "_MONTHS_ON_FILE_BANKING = 1 AND [MONTHS_ON_FILE_BANKING] IS NULL) OR ([MONTHS_ON"& _ 
                "_FILE_BANKING] = @Original_MONTHS_ON_FILE_BANKING)) AND ((@IsNull_MONTHS_SINCE_L"& _ 
                "AST_OPEN_BANKING = 1 AND [MONTHS_SINCE_LAST_OPEN_BANKING] IS NULL) OR ([MONTHS_S"& _ 
                "INCE_LAST_OPEN_BANKING] = @Original_MONTHS_SINCE_LAST_OPEN_BANKING)) AND ((@IsNu"& _ 
                "ll_BK_IND_PMOR = 1 AND [BK_IND_PMOR] IS NULL) OR ([BK_IND_PMOR] = @Original_BK_I"& _ 
                "ND_PMOR)) AND ((@IsNull_BK24_IND_EXP = 1 AND [BK24_IND_EXP] IS NULL) OR ([BK24_I"& _ 
                "ND_EXP] = @Original_BK24_IND_EXP)) AND ((@p3 = 1 AND [12_INST] IS NULL) OR ([12_"& _ 
                "INST] = @p2)) AND ((@IsNull_BK_DEUDA_TOT = 1 AND [BK_DEUDA_TOT] IS NULL) OR ([BK"& _ 
                "_DEUDA_TOT] = @Original_BK_DEUDA_TOT)) AND ((@IsNull_BK_DEUDA_CP = 1 AND [BK_DEU"& _ 
                "DA_CP] IS NULL) OR ([BK_DEUDA_CP] = @Original_BK_DEUDA_CP)) AND ((@IsNull_NBK_DE"& _ 
                "UDA_TOT = 1 AND [NBK_DEUDA_TOT] IS NULL) OR ([NBK_DEUDA_TOT] = @Original_NBK_DEU"& _ 
                "DA_TOT)) AND ((@IsNull_NBK_DEUDA_CP = 1 AND [NBK_DEUDA_CP] IS NULL) OR ([NBK_DEU"& _ 
                "DA_CP] = @Original_NBK_DEUDA_CP)) AND ((@IsNull_DEUDA_TOT = 1 AND [DEUDA_TOT] IS"& _ 
                " NULL) OR ([DEUDA_TOT] = @Original_DEUDA_TOT)) AND ((@IsNull_DEUDA_TOT_CP = 1 AN"& _ 
                "D [DEUDA_TOT_CP] IS NULL) OR ([DEUDA_TOT_CP] = @Original_DEUDA_TOT_CP)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_id", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RFC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RFC", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mes", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mes", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mes", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_CLEAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_CLEAN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_CLEAN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_CLEAN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_NUM_CRED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_CRED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_NUM_CRED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_CRED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_NUM_TC_ACT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_TC_ACT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_NUM_TC_ACT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_TC_ACT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK12_NUM_CRED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_NUM_CRED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK12_NUM_CRED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_NUM_CRED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_NUM_EXP_PAIDONTIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_EXP_PAIDONTIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_NUM_EXP_PAIDONTIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_EXP_PAIDONTIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_PCT_PROMT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_PROMT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_PCT_PROMT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_PROMT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK12_PCT_PROMT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_PCT_PROMT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK12_PCT_PROMT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_PCT_PROMT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_PCT_SAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_SAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_PCT_SAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_SAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK12_PCT_SAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_PCT_SAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK12_PCT_SAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_PCT_SAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK24_PCT_60PLUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK24_PCT_60PLUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK24_PCT_60PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK24_PCT_60PLUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK24_PCT_60PLUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK24_PCT_60PLUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK24_PCT_60PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK24_PCT_60PLUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK12_COMM_PCT_PLUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_COMM_PCT_PLUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK12_COMM_PCT_PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_COMM_PCT_PLUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_PCT_90PLUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_90PLUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_PCT_90PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_90PLUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_DPD_PROM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_DPD_PROM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_DPD_PROM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_DPD_PROM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_IND_QCRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_IND_QCRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_IND_QCRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_IND_QCRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_MAX_CREDIT_AMT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_MAX_CREDIT_AMT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_MAX_CREDIT_AMT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_MAX_CREDIT_AMT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MONTHS_ON_FILE_BANKING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MONTHS_ON_FILE_BANKING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MONTHS_ON_FILE_BANKING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MONTHS_ON_FILE_BANKING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MONTHS_SINCE_LAST_OPEN_BANKING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MONTHS_SINCE_LAST_OPEN_BANKING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MONTHS_SINCE_LAST_OPEN_BANKING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MONTHS_SINCE_LAST_OPEN_BANKING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK_IND_PMOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_IND_PMOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK_IND_PMOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_IND_PMOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK24_IND_EXP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK24_IND_EXP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK24_IND_EXP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK24_IND_EXP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "12_INST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "12_INST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK_DEUDA_TOT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_DEUDA_TOT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK_DEUDA_TOT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_DEUDA_TOT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK_DEUDA_CP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_DEUDA_CP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK_DEUDA_CP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_DEUDA_CP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK_DEUDA_TOT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK_DEUDA_TOT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK_DEUDA_TOT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK_DEUDA_TOT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK_DEUDA_CP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK_DEUDA_CP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK_DEUDA_CP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK_DEUDA_CP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DEUDA_TOT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDA_TOT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEUDA_TOT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDA_TOT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DEUDA_TOT_CP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDA_TOT_CP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEUDA_TOT_CP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDA_TOT_CP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BC_BuroDatos] ([RFC], [Mes], [BK12_CLEAN], [BK12_NUM_CRED], [B"& _ 
                "K12_NUM_TC_ACT], [NBK12_NUM_CRED], [BK12_NUM_EXP_PAIDONTIME], [BK12_PCT_PROMT], "& _ 
                "[NBK12_PCT_PROMT], [BK12_PCT_SAT], [NBK12_PCT_SAT], [BK24_PCT_60PLUS], [NBK24_PC"& _ 
                "T_60PLUS], [NBK12_COMM_PCT_PLUS], [BK12_PCT_90PLUS], [BK12_DPD_PROM], [BK12_IND_"& _ 
                "QCRA], [BK12_MAX_CREDIT_AMT], [MONTHS_ON_FILE_BANKING], [MONTHS_SINCE_LAST_OPEN_"& _ 
                "BANKING], [BK_IND_PMOR], [BK24_IND_EXP], [12_INST], [BK_DEUDA_TOT], [BK_DEUDA_CP"& _ 
                "], [NBK_DEUDA_TOT], [NBK_DEUDA_CP], [DEUDA_TOT], [DEUDA_TOT_CP]) VALUES (@RFC, @"& _ 
                "Mes, @BK12_CLEAN, @BK12_NUM_CRED, @BK12_NUM_TC_ACT, @NBK12_NUM_CRED, @BK12_NUM_E"& _ 
                "XP_PAIDONTIME, @BK12_PCT_PROMT, @NBK12_PCT_PROMT, @BK12_PCT_SAT, @NBK12_PCT_SAT,"& _ 
                " @BK24_PCT_60PLUS, @NBK24_PCT_60PLUS, @NBK12_COMM_PCT_PLUS, @BK12_PCT_90PLUS, @B"& _ 
                "K12_DPD_PROM, @BK12_IND_QCRA, @BK12_MAX_CREDIT_AMT, @MONTHS_ON_FILE_BANKING, @MO"& _ 
                "NTHS_SINCE_LAST_OPEN_BANKING, @BK_IND_PMOR, @BK24_IND_EXP, @p1, @BK_DEUDA_TOT, @"& _ 
                "BK_DEUDA_CP, @NBK_DEUDA_TOT, @NBK_DEUDA_CP, @DEUDA_TOT, @DEUDA_TOT_CP);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT "& _ 
                "id, RFC, Mes, BK12_CLEAN, BK12_NUM_CRED, BK12_NUM_TC_ACT, NBK12_NUM_CRED, BK12_N"& _ 
                "UM_EXP_PAIDONTIME, BK12_PCT_PROMT, NBK12_PCT_PROMT, BK12_PCT_SAT, NBK12_PCT_SAT,"& _ 
                " BK24_PCT_60PLUS, NBK24_PCT_60PLUS, NBK12_COMM_PCT_PLUS, BK12_PCT_90PLUS, BK12_D"& _ 
                "PD_PROM, BK12_IND_QCRA, BK12_MAX_CREDIT_AMT, MONTHS_ON_FILE_BANKING, MONTHS_SINC"& _ 
                "E_LAST_OPEN_BANKING, BK_IND_PMOR, BK24_IND_EXP, [12_INST], BK_DEUDA_TOT, BK_DEUD"& _ 
                "A_CP, NBK_DEUDA_TOT, NBK_DEUDA_CP, DEUDA_TOT, DEUDA_TOT_CP FROM BC_BuroDatos WHE"& _ 
                "RE (id = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RFC", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mes", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_CLEAN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_CLEAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_NUM_CRED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_CRED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_NUM_TC_ACT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_TC_ACT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK12_NUM_CRED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_NUM_CRED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_NUM_EXP_PAIDONTIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_EXP_PAIDONTIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_PCT_PROMT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_PROMT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK12_PCT_PROMT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_PCT_PROMT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_PCT_SAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_SAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK12_PCT_SAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_PCT_SAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK24_PCT_60PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK24_PCT_60PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK24_PCT_60PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK24_PCT_60PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK12_COMM_PCT_PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_COMM_PCT_PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_PCT_90PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_90PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_DPD_PROM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_DPD_PROM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_IND_QCRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_IND_QCRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_MAX_CREDIT_AMT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_MAX_CREDIT_AMT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MONTHS_ON_FILE_BANKING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MONTHS_ON_FILE_BANKING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MONTHS_SINCE_LAST_OPEN_BANKING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MONTHS_SINCE_LAST_OPEN_BANKING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK_IND_PMOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_IND_PMOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK24_IND_EXP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK24_IND_EXP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "12_INST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK_DEUDA_TOT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_DEUDA_TOT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK_DEUDA_CP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_DEUDA_CP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK_DEUDA_TOT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK_DEUDA_TOT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK_DEUDA_CP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK_DEUDA_CP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEUDA_TOT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDA_TOT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEUDA_TOT_CP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDA_TOT_CP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[BC_BuroDatos] SET [RFC] = @RFC, [Mes] = @Mes, [BK12_CLEAN] = @BK12_"& _ 
                "CLEAN, [BK12_NUM_CRED] = @BK12_NUM_CRED, [BK12_NUM_TC_ACT] = @BK12_NUM_TC_ACT, ["& _ 
                "NBK12_NUM_CRED] = @NBK12_NUM_CRED, [BK12_NUM_EXP_PAIDONTIME] = @BK12_NUM_EXP_PAI"& _ 
                "DONTIME, [BK12_PCT_PROMT] = @BK12_PCT_PROMT, [NBK12_PCT_PROMT] = @NBK12_PCT_PROM"& _ 
                "T, [BK12_PCT_SAT] = @BK12_PCT_SAT, [NBK12_PCT_SAT] = @NBK12_PCT_SAT, [BK24_PCT_6"& _ 
                "0PLUS] = @BK24_PCT_60PLUS, [NBK24_PCT_60PLUS] = @NBK24_PCT_60PLUS, [NBK12_COMM_P"& _ 
                "CT_PLUS] = @NBK12_COMM_PCT_PLUS, [BK12_PCT_90PLUS] = @BK12_PCT_90PLUS, [BK12_DPD"& _ 
                "_PROM] = @BK12_DPD_PROM, [BK12_IND_QCRA] = @BK12_IND_QCRA, [BK12_MAX_CREDIT_AMT]"& _ 
                " = @BK12_MAX_CREDIT_AMT, [MONTHS_ON_FILE_BANKING] = @MONTHS_ON_FILE_BANKING, [MO"& _ 
                "NTHS_SINCE_LAST_OPEN_BANKING] = @MONTHS_SINCE_LAST_OPEN_BANKING, [BK_IND_PMOR] ="& _ 
                " @BK_IND_PMOR, [BK24_IND_EXP] = @BK24_IND_EXP, [12_INST] = @p1, [BK_DEUDA_TOT] ="& _ 
                " @BK_DEUDA_TOT, [BK_DEUDA_CP] = @BK_DEUDA_CP, [NBK_DEUDA_TOT] = @NBK_DEUDA_TOT, "& _ 
                "[NBK_DEUDA_CP] = @NBK_DEUDA_CP, [DEUDA_TOT] = @DEUDA_TOT, [DEUDA_TOT_CP] = @DEUD"& _ 
                "A_TOT_CP WHERE (([id] = @Original_id) AND ((@IsNull_RFC = 1 AND [RFC] IS NULL) O"& _ 
                "R ([RFC] = @Original_RFC)) AND ((@IsNull_Mes = 1 AND [Mes] IS NULL) OR ([Mes] = "& _ 
                "@Original_Mes)) AND ((@IsNull_BK12_CLEAN = 1 AND [BK12_CLEAN] IS NULL) OR ([BK12"& _ 
                "_CLEAN] = @Original_BK12_CLEAN)) AND ((@IsNull_BK12_NUM_CRED = 1 AND [BK12_NUM_C"& _ 
                "RED] IS NULL) OR ([BK12_NUM_CRED] = @Original_BK12_NUM_CRED)) AND ((@IsNull_BK12"& _ 
                "_NUM_TC_ACT = 1 AND [BK12_NUM_TC_ACT] IS NULL) OR ([BK12_NUM_TC_ACT] = @Original"& _ 
                "_BK12_NUM_TC_ACT)) AND ((@IsNull_NBK12_NUM_CRED = 1 AND [NBK12_NUM_CRED] IS NULL"& _ 
                ") OR ([NBK12_NUM_CRED] = @Original_NBK12_NUM_CRED)) AND ((@IsNull_BK12_NUM_EXP_P"& _ 
                "AIDONTIME = 1 AND [BK12_NUM_EXP_PAIDONTIME] IS NULL) OR ([BK12_NUM_EXP_PAIDONTIM"& _ 
                "E] = @Original_BK12_NUM_EXP_PAIDONTIME)) AND ((@IsNull_BK12_PCT_PROMT = 1 AND [B"& _ 
                "K12_PCT_PROMT] IS NULL) OR ([BK12_PCT_PROMT] = @Original_BK12_PCT_PROMT)) AND (("& _ 
                "@IsNull_NBK12_PCT_PROMT = 1 AND [NBK12_PCT_PROMT] IS NULL) OR ([NBK12_PCT_PROMT]"& _ 
                " = @Original_NBK12_PCT_PROMT)) AND ((@IsNull_BK12_PCT_SAT = 1 AND [BK12_PCT_SAT]"& _ 
                " IS NULL) OR ([BK12_PCT_SAT] = @Original_BK12_PCT_SAT)) AND ((@IsNull_NBK12_PCT_"& _ 
                "SAT = 1 AND [NBK12_PCT_SAT] IS NULL) OR ([NBK12_PCT_SAT] = @Original_NBK12_PCT_S"& _ 
                "AT)) AND ((@IsNull_BK24_PCT_60PLUS = 1 AND [BK24_PCT_60PLUS] IS NULL) OR ([BK24_"& _ 
                "PCT_60PLUS] = @Original_BK24_PCT_60PLUS)) AND ((@IsNull_NBK24_PCT_60PLUS = 1 AND"& _ 
                " [NBK24_PCT_60PLUS] IS NULL) OR ([NBK24_PCT_60PLUS] = @Original_NBK24_PCT_60PLUS"& _ 
                ")) AND ((@IsNull_NBK12_COMM_PCT_PLUS = 1 AND [NBK12_COMM_PCT_PLUS] IS NULL) OR ("& _ 
                "[NBK12_COMM_PCT_PLUS] = @Original_NBK12_COMM_PCT_PLUS)) AND ((@IsNull_BK12_PCT_9"& _ 
                "0PLUS = 1 AND [BK12_PCT_90PLUS] IS NULL) OR ([BK12_PCT_90PLUS] = @Original_BK12_"& _ 
                "PCT_90PLUS)) AND ((@IsNull_BK12_DPD_PROM = 1 AND [BK12_DPD_PROM] IS NULL) OR ([B"& _ 
                "K12_DPD_PROM] = @Original_BK12_DPD_PROM)) AND ((@IsNull_BK12_IND_QCRA = 1 AND [B"& _ 
                "K12_IND_QCRA] IS NULL) OR ([BK12_IND_QCRA] = @Original_BK12_IND_QCRA)) AND ((@Is"& _ 
                "Null_BK12_MAX_CREDIT_AMT = 1 AND [BK12_MAX_CREDIT_AMT] IS NULL) OR ([BK12_MAX_CR"& _ 
                "EDIT_AMT] = @Original_BK12_MAX_CREDIT_AMT)) AND ((@IsNull_MONTHS_ON_FILE_BANKING"& _ 
                " = 1 AND [MONTHS_ON_FILE_BANKING] IS NULL) OR ([MONTHS_ON_FILE_BANKING] = @Origi"& _ 
                "nal_MONTHS_ON_FILE_BANKING)) AND ((@IsNull_MONTHS_SINCE_LAST_OPEN_BANKING = 1 AN"& _ 
                "D [MONTHS_SINCE_LAST_OPEN_BANKING] IS NULL) OR ([MONTHS_SINCE_LAST_OPEN_BANKING]"& _ 
                " = @Original_MONTHS_SINCE_LAST_OPEN_BANKING)) AND ((@IsNull_BK_IND_PMOR = 1 AND "& _ 
                "[BK_IND_PMOR] IS NULL) OR ([BK_IND_PMOR] = @Original_BK_IND_PMOR)) AND ((@IsNull"& _ 
                "_BK24_IND_EXP = 1 AND [BK24_IND_EXP] IS NULL) OR ([BK24_IND_EXP] = @Original_BK2"& _ 
                "4_IND_EXP)) AND ((@p3 = 1 AND [12_INST] IS NULL) OR ([12_INST] = @p2)) AND ((@Is"& _ 
                "Null_BK_DEUDA_TOT = 1 AND [BK_DEUDA_TOT] IS NULL) OR ([BK_DEUDA_TOT] = @Original"& _ 
                "_BK_DEUDA_TOT)) AND ((@IsNull_BK_DEUDA_CP = 1 AND [BK_DEUDA_CP] IS NULL) OR ([BK"& _ 
                "_DEUDA_CP] = @Original_BK_DEUDA_CP)) AND ((@IsNull_NBK_DEUDA_TOT = 1 AND [NBK_DE"& _ 
                "UDA_TOT] IS NULL) OR ([NBK_DEUDA_TOT] = @Original_NBK_DEUDA_TOT)) AND ((@IsNull_"& _ 
                "NBK_DEUDA_CP = 1 AND [NBK_DEUDA_CP] IS NULL) OR ([NBK_DEUDA_CP] = @Original_NBK_"& _ 
                "DEUDA_CP)) AND ((@IsNull_DEUDA_TOT = 1 AND [DEUDA_TOT] IS NULL) OR ([DEUDA_TOT] "& _ 
                "= @Original_DEUDA_TOT)) AND ((@IsNull_DEUDA_TOT_CP = 1 AND [DEUDA_TOT_CP] IS NUL"& _ 
                "L) OR ([DEUDA_TOT_CP] = @Original_DEUDA_TOT_CP)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT id, RFC, Mes, BK12_CL"& _ 
                "EAN, BK12_NUM_CRED, BK12_NUM_TC_ACT, NBK12_NUM_CRED, BK12_NUM_EXP_PAIDONTIME, BK"& _ 
                "12_PCT_PROMT, NBK12_PCT_PROMT, BK12_PCT_SAT, NBK12_PCT_SAT, BK24_PCT_60PLUS, NBK"& _ 
                "24_PCT_60PLUS, NBK12_COMM_PCT_PLUS, BK12_PCT_90PLUS, BK12_DPD_PROM, BK12_IND_QCR"& _ 
                "A, BK12_MAX_CREDIT_AMT, MONTHS_ON_FILE_BANKING, MONTHS_SINCE_LAST_OPEN_BANKING, "& _ 
                "BK_IND_PMOR, BK24_IND_EXP, [12_INST], BK_DEUDA_TOT, BK_DEUDA_CP, NBK_DEUDA_TOT, "& _ 
                "NBK_DEUDA_CP, DEUDA_TOT, DEUDA_TOT_CP FROM BC_BuroDatos WHERE (id = @id)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RFC", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mes", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_CLEAN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_CLEAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_NUM_CRED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_CRED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_NUM_TC_ACT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_TC_ACT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK12_NUM_CRED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_NUM_CRED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_NUM_EXP_PAIDONTIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_EXP_PAIDONTIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_PCT_PROMT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_PROMT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK12_PCT_PROMT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_PCT_PROMT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_PCT_SAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_SAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK12_PCT_SAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_PCT_SAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK24_PCT_60PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK24_PCT_60PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK24_PCT_60PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK24_PCT_60PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK12_COMM_PCT_PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_COMM_PCT_PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_PCT_90PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_90PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_DPD_PROM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_DPD_PROM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_IND_QCRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_IND_QCRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK12_MAX_CREDIT_AMT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_MAX_CREDIT_AMT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MONTHS_ON_FILE_BANKING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MONTHS_ON_FILE_BANKING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MONTHS_SINCE_LAST_OPEN_BANKING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MONTHS_SINCE_LAST_OPEN_BANKING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK_IND_PMOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_IND_PMOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK24_IND_EXP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK24_IND_EXP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "12_INST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK_DEUDA_TOT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_DEUDA_TOT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BK_DEUDA_CP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_DEUDA_CP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK_DEUDA_TOT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK_DEUDA_TOT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NBK_DEUDA_CP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK_DEUDA_CP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEUDA_TOT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDA_TOT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEUDA_TOT_CP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDA_TOT_CP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_id", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RFC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RFC", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mes", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mes", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mes", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_CLEAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_CLEAN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_CLEAN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_CLEAN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_NUM_CRED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_CRED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_NUM_CRED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_CRED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_NUM_TC_ACT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_TC_ACT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_NUM_TC_ACT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_TC_ACT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK12_NUM_CRED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_NUM_CRED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK12_NUM_CRED", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_NUM_CRED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_NUM_EXP_PAIDONTIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_EXP_PAIDONTIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_NUM_EXP_PAIDONTIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_NUM_EXP_PAIDONTIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_PCT_PROMT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_PROMT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_PCT_PROMT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_PROMT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK12_PCT_PROMT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_PCT_PROMT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK12_PCT_PROMT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_PCT_PROMT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_PCT_SAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_SAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_PCT_SAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_SAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK12_PCT_SAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_PCT_SAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK12_PCT_SAT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_PCT_SAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK24_PCT_60PLUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK24_PCT_60PLUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK24_PCT_60PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK24_PCT_60PLUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK24_PCT_60PLUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK24_PCT_60PLUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK24_PCT_60PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK24_PCT_60PLUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK12_COMM_PCT_PLUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_COMM_PCT_PLUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK12_COMM_PCT_PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK12_COMM_PCT_PLUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_PCT_90PLUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_90PLUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_PCT_90PLUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_PCT_90PLUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_DPD_PROM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_DPD_PROM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_DPD_PROM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_DPD_PROM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_IND_QCRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_IND_QCRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_IND_QCRA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_IND_QCRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK12_MAX_CREDIT_AMT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_MAX_CREDIT_AMT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK12_MAX_CREDIT_AMT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK12_MAX_CREDIT_AMT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MONTHS_ON_FILE_BANKING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MONTHS_ON_FILE_BANKING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MONTHS_ON_FILE_BANKING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MONTHS_ON_FILE_BANKING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MONTHS_SINCE_LAST_OPEN_BANKING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MONTHS_SINCE_LAST_OPEN_BANKING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MONTHS_SINCE_LAST_OPEN_BANKING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MONTHS_SINCE_LAST_OPEN_BANKING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK_IND_PMOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_IND_PMOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK_IND_PMOR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_IND_PMOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK24_IND_EXP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK24_IND_EXP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK24_IND_EXP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK24_IND_EXP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "12_INST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "12_INST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK_DEUDA_TOT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_DEUDA_TOT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK_DEUDA_TOT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_DEUDA_TOT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BK_DEUDA_CP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_DEUDA_CP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BK_DEUDA_CP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BK_DEUDA_CP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK_DEUDA_TOT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK_DEUDA_TOT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK_DEUDA_TOT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK_DEUDA_TOT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NBK_DEUDA_CP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK_DEUDA_CP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NBK_DEUDA_CP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NBK_DEUDA_CP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DEUDA_TOT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDA_TOT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEUDA_TOT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDA_TOT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DEUDA_TOT_CP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDA_TOT_CP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DEUDA_TOT_CP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEUDA_TOT_CP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@id", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=server-raid;Initial Catalog=production;Persist Security Info=True;Use"& _ 
                "r ID=User_PRO;Password=User_PRO2015"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT id, RFC, Mes, BK12_CLEAN, BK12_NUM_CRED, BK12_NUM_TC_ACT, NBK12_NUM_CRED, "& _ 
                "BK12_NUM_EXP_PAIDONTIME, BK12_PCT_PROMT, NBK12_PCT_PROMT, BK12_PCT_SAT, NBK12_PC"& _ 
                "T_SAT, BK24_PCT_60PLUS, NBK24_PCT_60PLUS, NBK12_COMM_PCT_PLUS, BK12_PCT_90PLUS, "& _ 
                "BK12_DPD_PROM, BK12_IND_QCRA, BK12_MAX_CREDIT_AMT, MONTHS_ON_FILE_BANKING, MONTH"& _ 
                "S_SINCE_LAST_OPEN_BANKING, BK_IND_PMOR, BK24_IND_EXP, [12_INST], BK_DEUDA_TOT, B"& _ 
                "K_DEUDA_CP, NBK_DEUDA_TOT, NBK_DEUDA_CP, DEUDA_TOT, DEUDA_TOT_CP FROM dbo.BC_Bur"& _ 
                "oDatos"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "update bc_buroDatos set NBK12_PCT_PROMT = '1' where NBK12_PCT_PROMT ='1.00';"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"upd"& _ 
                "ate bc_buroDatos set NBK12_PCT_PROMT = '0' where NBK12_PCT_PROMT ='0.00';"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"updat"& _ 
                "e bc_buroDatos set BK12_PCT_SAT = '1' where BK12_PCT_SAT ='1.00';"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"update bc_bur"& _ 
                "oDatos set BK12_PCT_SAT = '0' where BK12_PCT_SAT ='0.00';"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"update bc_buroDatos s"& _ 
                "et BK12_PCT_90PLUS = '1' where BK12_PCT_90PLUS ='1.00';"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"update bc_buroDatos set"& _ 
                " BK12_PCT_90PLUS = '0' where BK12_PCT_90PLUS ='0.00';"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"update bc_buroDatos set B"& _ 
                "K24_PCT_60PLUS = '1' where BK24_PCT_60PLUS ='1.00';"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"update bc_buroDatos set BK2"& _ 
                "4_PCT_60PLUS = '0' where BK24_PCT_60PLUS ='0.00';"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "DELETE FROM BC_BuroDatos"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "DELETE FROM BC_BuroDatos"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE         (RFC = @RFC)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RFC", Global.System.Data.SqlDbType.NChar, 13, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As FinagilDS.BC_BuroDatosDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As FinagilDS.BC_BuroDatosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As FinagilDS.BC_BuroDatosDataTable = New FinagilDS.BC_BuroDatosDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As FinagilDS.BC_BuroDatosDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As FinagilDS) As Integer
            Return Me.Adapter.Update(dataSet, "BC_BuroDatos")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_id As Decimal,  _
                    ByVal Original_RFC As String,  _
                    ByVal Original_Mes As String,  _
                    ByVal Original_BK12_CLEAN As String,  _
                    ByVal Original_BK12_NUM_CRED As String,  _
                    ByVal Original_BK12_NUM_TC_ACT As String,  _
                    ByVal Original_NBK12_NUM_CRED As String,  _
                    ByVal Original_BK12_NUM_EXP_PAIDONTIME As String,  _
                    ByVal Original_BK12_PCT_PROMT As String,  _
                    ByVal Original_NBK12_PCT_PROMT As String,  _
                    ByVal Original_BK12_PCT_SAT As String,  _
                    ByVal Original_NBK12_PCT_SAT As String,  _
                    ByVal Original_BK24_PCT_60PLUS As String,  _
                    ByVal Original_NBK24_PCT_60PLUS As String,  _
                    ByVal Original_NBK12_COMM_PCT_PLUS As String,  _
                    ByVal Original_BK12_PCT_90PLUS As String,  _
                    ByVal Original_BK12_DPD_PROM As String,  _
                    ByVal Original_BK12_IND_QCRA As String,  _
                    ByVal Original_BK12_MAX_CREDIT_AMT As String,  _
                    ByVal Original_MONTHS_ON_FILE_BANKING As String,  _
                    ByVal Original_MONTHS_SINCE_LAST_OPEN_BANKING As String,  _
                    ByVal Original_BK_IND_PMOR As String,  _
                    ByVal Original_BK24_IND_EXP As String,  _
                    ByVal p2 As String,  _
                    ByVal Original_BK_DEUDA_TOT As String,  _
                    ByVal Original_BK_DEUDA_CP As String,  _
                    ByVal Original_NBK_DEUDA_TOT As String,  _
                    ByVal Original_NBK_DEUDA_CP As String,  _
                    ByVal Original_DEUDA_TOT As String,  _
                    ByVal Original_DEUDA_TOT_CP As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_id,Decimal)
            If (Original_RFC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_RFC,String)
            End If
            If (Original_Mes Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Mes,String)
            End If
            If (Original_BK12_CLEAN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_BK12_CLEAN,String)
            End If
            If (Original_BK12_NUM_CRED Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_BK12_NUM_CRED,String)
            End If
            If (Original_BK12_NUM_TC_ACT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_BK12_NUM_TC_ACT,String)
            End If
            If (Original_NBK12_NUM_CRED Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_NBK12_NUM_CRED,String)
            End If
            If (Original_BK12_NUM_EXP_PAIDONTIME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_BK12_NUM_EXP_PAIDONTIME,String)
            End If
            If (Original_BK12_PCT_PROMT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_BK12_PCT_PROMT,String)
            End If
            If (Original_NBK12_PCT_PROMT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_NBK12_PCT_PROMT,String)
            End If
            If (Original_BK12_PCT_SAT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_BK12_PCT_SAT,String)
            End If
            If (Original_NBK12_PCT_SAT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_NBK12_PCT_SAT,String)
            End If
            If (Original_BK24_PCT_60PLUS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_BK24_PCT_60PLUS,String)
            End If
            If (Original_NBK24_PCT_60PLUS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_NBK24_PCT_60PLUS,String)
            End If
            If (Original_NBK12_COMM_PCT_PLUS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_NBK12_COMM_PCT_PLUS,String)
            End If
            If (Original_BK12_PCT_90PLUS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_BK12_PCT_90PLUS,String)
            End If
            If (Original_BK12_DPD_PROM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_BK12_DPD_PROM,String)
            End If
            If (Original_BK12_IND_QCRA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_BK12_IND_QCRA,String)
            End If
            If (Original_BK12_MAX_CREDIT_AMT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_BK12_MAX_CREDIT_AMT,String)
            End If
            If (Original_MONTHS_ON_FILE_BANKING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_MONTHS_ON_FILE_BANKING,String)
            End If
            If (Original_MONTHS_SINCE_LAST_OPEN_BANKING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_MONTHS_SINCE_LAST_OPEN_BANKING,String)
            End If
            If (Original_BK_IND_PMOR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_BK_IND_PMOR,String)
            End If
            If (Original_BK24_IND_EXP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_BK24_IND_EXP,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(p2,String)
            End If
            If (Original_BK_DEUDA_TOT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_BK_DEUDA_TOT,String)
            End If
            If (Original_BK_DEUDA_CP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_BK_DEUDA_CP,String)
            End If
            If (Original_NBK_DEUDA_TOT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_NBK_DEUDA_TOT,String)
            End If
            If (Original_NBK_DEUDA_CP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_NBK_DEUDA_CP,String)
            End If
            If (Original_DEUDA_TOT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_DEUDA_TOT,String)
            End If
            If (Original_DEUDA_TOT_CP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_DEUDA_TOT_CP,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal RFC As String,  _
                    ByVal Mes As String,  _
                    ByVal BK12_CLEAN As String,  _
                    ByVal BK12_NUM_CRED As String,  _
                    ByVal BK12_NUM_TC_ACT As String,  _
                    ByVal NBK12_NUM_CRED As String,  _
                    ByVal BK12_NUM_EXP_PAIDONTIME As String,  _
                    ByVal BK12_PCT_PROMT As String,  _
                    ByVal NBK12_PCT_PROMT As String,  _
                    ByVal BK12_PCT_SAT As String,  _
                    ByVal NBK12_PCT_SAT As String,  _
                    ByVal BK24_PCT_60PLUS As String,  _
                    ByVal NBK24_PCT_60PLUS As String,  _
                    ByVal NBK12_COMM_PCT_PLUS As String,  _
                    ByVal BK12_PCT_90PLUS As String,  _
                    ByVal BK12_DPD_PROM As String,  _
                    ByVal BK12_IND_QCRA As String,  _
                    ByVal BK12_MAX_CREDIT_AMT As String,  _
                    ByVal MONTHS_ON_FILE_BANKING As String,  _
                    ByVal MONTHS_SINCE_LAST_OPEN_BANKING As String,  _
                    ByVal BK_IND_PMOR As String,  _
                    ByVal BK24_IND_EXP As String,  _
                    ByVal p1 As String,  _
                    ByVal BK_DEUDA_TOT As String,  _
                    ByVal BK_DEUDA_CP As String,  _
                    ByVal NBK_DEUDA_TOT As String,  _
                    ByVal NBK_DEUDA_CP As String,  _
                    ByVal DEUDA_TOT As String,  _
                    ByVal DEUDA_TOT_CP As String) As Integer
            If (RFC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(RFC,String)
            End If
            If (Mes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Mes,String)
            End If
            If (BK12_CLEAN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(BK12_CLEAN,String)
            End If
            If (BK12_NUM_CRED Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(BK12_NUM_CRED,String)
            End If
            If (BK12_NUM_TC_ACT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(BK12_NUM_TC_ACT,String)
            End If
            If (NBK12_NUM_CRED Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(NBK12_NUM_CRED,String)
            End If
            If (BK12_NUM_EXP_PAIDONTIME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(BK12_NUM_EXP_PAIDONTIME,String)
            End If
            If (BK12_PCT_PROMT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(BK12_PCT_PROMT,String)
            End If
            If (NBK12_PCT_PROMT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(NBK12_PCT_PROMT,String)
            End If
            If (BK12_PCT_SAT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(BK12_PCT_SAT,String)
            End If
            If (NBK12_PCT_SAT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(NBK12_PCT_SAT,String)
            End If
            If (BK24_PCT_60PLUS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(BK24_PCT_60PLUS,String)
            End If
            If (NBK24_PCT_60PLUS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(NBK24_PCT_60PLUS,String)
            End If
            If (NBK12_COMM_PCT_PLUS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(NBK12_COMM_PCT_PLUS,String)
            End If
            If (BK12_PCT_90PLUS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(BK12_PCT_90PLUS,String)
            End If
            If (BK12_DPD_PROM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(BK12_DPD_PROM,String)
            End If
            If (BK12_IND_QCRA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(BK12_IND_QCRA,String)
            End If
            If (BK12_MAX_CREDIT_AMT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(BK12_MAX_CREDIT_AMT,String)
            End If
            If (MONTHS_ON_FILE_BANKING Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(MONTHS_ON_FILE_BANKING,String)
            End If
            If (MONTHS_SINCE_LAST_OPEN_BANKING Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(MONTHS_SINCE_LAST_OPEN_BANKING,String)
            End If
            If (BK_IND_PMOR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(BK_IND_PMOR,String)
            End If
            If (BK24_IND_EXP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(BK24_IND_EXP,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(p1,String)
            End If
            If (BK_DEUDA_TOT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(BK_DEUDA_TOT,String)
            End If
            If (BK_DEUDA_CP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(BK_DEUDA_CP,String)
            End If
            If (NBK_DEUDA_TOT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(NBK_DEUDA_TOT,String)
            End If
            If (NBK_DEUDA_CP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(NBK_DEUDA_CP,String)
            End If
            If (DEUDA_TOT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(DEUDA_TOT,String)
            End If
            If (DEUDA_TOT_CP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(DEUDA_TOT_CP,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal RFC As String,  _
                    ByVal Mes As String,  _
                    ByVal BK12_CLEAN As String,  _
                    ByVal BK12_NUM_CRED As String,  _
                    ByVal BK12_NUM_TC_ACT As String,  _
                    ByVal NBK12_NUM_CRED As String,  _
                    ByVal BK12_NUM_EXP_PAIDONTIME As String,  _
                    ByVal BK12_PCT_PROMT As String,  _
                    ByVal NBK12_PCT_PROMT As String,  _
                    ByVal BK12_PCT_SAT As String,  _
                    ByVal NBK12_PCT_SAT As String,  _
                    ByVal BK24_PCT_60PLUS As String,  _
                    ByVal NBK24_PCT_60PLUS As String,  _
                    ByVal NBK12_COMM_PCT_PLUS As String,  _
                    ByVal BK12_PCT_90PLUS As String,  _
                    ByVal BK12_DPD_PROM As String,  _
                    ByVal BK12_IND_QCRA As String,  _
                    ByVal BK12_MAX_CREDIT_AMT As String,  _
                    ByVal MONTHS_ON_FILE_BANKING As String,  _
                    ByVal MONTHS_SINCE_LAST_OPEN_BANKING As String,  _
                    ByVal BK_IND_PMOR As String,  _
                    ByVal BK24_IND_EXP As String,  _
                    ByVal p1 As String,  _
                    ByVal BK_DEUDA_TOT As String,  _
                    ByVal BK_DEUDA_CP As String,  _
                    ByVal NBK_DEUDA_TOT As String,  _
                    ByVal NBK_DEUDA_CP As String,  _
                    ByVal DEUDA_TOT As String,  _
                    ByVal DEUDA_TOT_CP As String,  _
                    ByVal Original_id As Decimal,  _
                    ByVal Original_RFC As String,  _
                    ByVal Original_Mes As String,  _
                    ByVal Original_BK12_CLEAN As String,  _
                    ByVal Original_BK12_NUM_CRED As String,  _
                    ByVal Original_BK12_NUM_TC_ACT As String,  _
                    ByVal Original_NBK12_NUM_CRED As String,  _
                    ByVal Original_BK12_NUM_EXP_PAIDONTIME As String,  _
                    ByVal Original_BK12_PCT_PROMT As String,  _
                    ByVal Original_NBK12_PCT_PROMT As String,  _
                    ByVal Original_BK12_PCT_SAT As String,  _
                    ByVal Original_NBK12_PCT_SAT As String,  _
                    ByVal Original_BK24_PCT_60PLUS As String,  _
                    ByVal Original_NBK24_PCT_60PLUS As String,  _
                    ByVal Original_NBK12_COMM_PCT_PLUS As String,  _
                    ByVal Original_BK12_PCT_90PLUS As String,  _
                    ByVal Original_BK12_DPD_PROM As String,  _
                    ByVal Original_BK12_IND_QCRA As String,  _
                    ByVal Original_BK12_MAX_CREDIT_AMT As String,  _
                    ByVal Original_MONTHS_ON_FILE_BANKING As String,  _
                    ByVal Original_MONTHS_SINCE_LAST_OPEN_BANKING As String,  _
                    ByVal Original_BK_IND_PMOR As String,  _
                    ByVal Original_BK24_IND_EXP As String,  _
                    ByVal p2 As String,  _
                    ByVal Original_BK_DEUDA_TOT As String,  _
                    ByVal Original_BK_DEUDA_CP As String,  _
                    ByVal Original_NBK_DEUDA_TOT As String,  _
                    ByVal Original_NBK_DEUDA_CP As String,  _
                    ByVal Original_DEUDA_TOT As String,  _
                    ByVal Original_DEUDA_TOT_CP As String,  _
                    ByVal id As Decimal) As Integer
            If (RFC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(RFC,String)
            End If
            If (Mes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Mes,String)
            End If
            If (BK12_CLEAN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(BK12_CLEAN,String)
            End If
            If (BK12_NUM_CRED Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(BK12_NUM_CRED,String)
            End If
            If (BK12_NUM_TC_ACT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(BK12_NUM_TC_ACT,String)
            End If
            If (NBK12_NUM_CRED Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(NBK12_NUM_CRED,String)
            End If
            If (BK12_NUM_EXP_PAIDONTIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(BK12_NUM_EXP_PAIDONTIME,String)
            End If
            If (BK12_PCT_PROMT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(BK12_PCT_PROMT,String)
            End If
            If (NBK12_PCT_PROMT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(NBK12_PCT_PROMT,String)
            End If
            If (BK12_PCT_SAT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(BK12_PCT_SAT,String)
            End If
            If (NBK12_PCT_SAT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(NBK12_PCT_SAT,String)
            End If
            If (BK24_PCT_60PLUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(BK24_PCT_60PLUS,String)
            End If
            If (NBK24_PCT_60PLUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(NBK24_PCT_60PLUS,String)
            End If
            If (NBK12_COMM_PCT_PLUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(NBK12_COMM_PCT_PLUS,String)
            End If
            If (BK12_PCT_90PLUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(BK12_PCT_90PLUS,String)
            End If
            If (BK12_DPD_PROM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(BK12_DPD_PROM,String)
            End If
            If (BK12_IND_QCRA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(BK12_IND_QCRA,String)
            End If
            If (BK12_MAX_CREDIT_AMT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(BK12_MAX_CREDIT_AMT,String)
            End If
            If (MONTHS_ON_FILE_BANKING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(MONTHS_ON_FILE_BANKING,String)
            End If
            If (MONTHS_SINCE_LAST_OPEN_BANKING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(MONTHS_SINCE_LAST_OPEN_BANKING,String)
            End If
            If (BK_IND_PMOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(BK_IND_PMOR,String)
            End If
            If (BK24_IND_EXP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(BK24_IND_EXP,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(p1,String)
            End If
            If (BK_DEUDA_TOT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(BK_DEUDA_TOT,String)
            End If
            If (BK_DEUDA_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(BK_DEUDA_CP,String)
            End If
            If (NBK_DEUDA_TOT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(NBK_DEUDA_TOT,String)
            End If
            If (NBK_DEUDA_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(NBK_DEUDA_CP,String)
            End If
            If (DEUDA_TOT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(DEUDA_TOT,String)
            End If
            If (DEUDA_TOT_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(DEUDA_TOT_CP,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_id,Decimal)
            If (Original_RFC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_RFC,String)
            End If
            If (Original_Mes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_Mes,String)
            End If
            If (Original_BK12_CLEAN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_BK12_CLEAN,String)
            End If
            If (Original_BK12_NUM_CRED Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_BK12_NUM_CRED,String)
            End If
            If (Original_BK12_NUM_TC_ACT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_BK12_NUM_TC_ACT,String)
            End If
            If (Original_NBK12_NUM_CRED Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_NBK12_NUM_CRED,String)
            End If
            If (Original_BK12_NUM_EXP_PAIDONTIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_BK12_NUM_EXP_PAIDONTIME,String)
            End If
            If (Original_BK12_PCT_PROMT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_BK12_PCT_PROMT,String)
            End If
            If (Original_NBK12_PCT_PROMT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_NBK12_PCT_PROMT,String)
            End If
            If (Original_BK12_PCT_SAT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_BK12_PCT_SAT,String)
            End If
            If (Original_NBK12_PCT_SAT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_NBK12_PCT_SAT,String)
            End If
            If (Original_BK24_PCT_60PLUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_BK24_PCT_60PLUS,String)
            End If
            If (Original_NBK24_PCT_60PLUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_NBK24_PCT_60PLUS,String)
            End If
            If (Original_NBK12_COMM_PCT_PLUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_NBK12_COMM_PCT_PLUS,String)
            End If
            If (Original_BK12_PCT_90PLUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_BK12_PCT_90PLUS,String)
            End If
            If (Original_BK12_DPD_PROM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_BK12_DPD_PROM,String)
            End If
            If (Original_BK12_IND_QCRA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_BK12_IND_QCRA,String)
            End If
            If (Original_BK12_MAX_CREDIT_AMT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_BK12_MAX_CREDIT_AMT,String)
            End If
            If (Original_MONTHS_ON_FILE_BANKING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_MONTHS_ON_FILE_BANKING,String)
            End If
            If (Original_MONTHS_SINCE_LAST_OPEN_BANKING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_MONTHS_SINCE_LAST_OPEN_BANKING,String)
            End If
            If (Original_BK_IND_PMOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_BK_IND_PMOR,String)
            End If
            If (Original_BK24_IND_EXP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_BK24_IND_EXP,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(p2,String)
            End If
            If (Original_BK_DEUDA_TOT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_BK_DEUDA_TOT,String)
            End If
            If (Original_BK_DEUDA_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_BK_DEUDA_CP,String)
            End If
            If (Original_NBK_DEUDA_TOT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_NBK_DEUDA_TOT,String)
            End If
            If (Original_NBK_DEUDA_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_NBK_DEUDA_CP,String)
            End If
            If (Original_DEUDA_TOT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_DEUDA_TOT,String)
            End If
            If (Original_DEUDA_TOT_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_DEUDA_TOT_CP,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(88).Value = CType(id,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal RFC As String,  _
                    ByVal Mes As String,  _
                    ByVal BK12_CLEAN As String,  _
                    ByVal BK12_NUM_CRED As String,  _
                    ByVal BK12_NUM_TC_ACT As String,  _
                    ByVal NBK12_NUM_CRED As String,  _
                    ByVal BK12_NUM_EXP_PAIDONTIME As String,  _
                    ByVal BK12_PCT_PROMT As String,  _
                    ByVal NBK12_PCT_PROMT As String,  _
                    ByVal BK12_PCT_SAT As String,  _
                    ByVal NBK12_PCT_SAT As String,  _
                    ByVal BK24_PCT_60PLUS As String,  _
                    ByVal NBK24_PCT_60PLUS As String,  _
                    ByVal NBK12_COMM_PCT_PLUS As String,  _
                    ByVal BK12_PCT_90PLUS As String,  _
                    ByVal BK12_DPD_PROM As String,  _
                    ByVal BK12_IND_QCRA As String,  _
                    ByVal BK12_MAX_CREDIT_AMT As String,  _
                    ByVal MONTHS_ON_FILE_BANKING As String,  _
                    ByVal MONTHS_SINCE_LAST_OPEN_BANKING As String,  _
                    ByVal BK_IND_PMOR As String,  _
                    ByVal BK24_IND_EXP As String,  _
                    ByVal p1 As String,  _
                    ByVal BK_DEUDA_TOT As String,  _
                    ByVal BK_DEUDA_CP As String,  _
                    ByVal NBK_DEUDA_TOT As String,  _
                    ByVal NBK_DEUDA_CP As String,  _
                    ByVal DEUDA_TOT As String,  _
                    ByVal DEUDA_TOT_CP As String,  _
                    ByVal Original_id As Decimal,  _
                    ByVal Original_RFC As String,  _
                    ByVal Original_Mes As String,  _
                    ByVal Original_BK12_CLEAN As String,  _
                    ByVal Original_BK12_NUM_CRED As String,  _
                    ByVal Original_BK12_NUM_TC_ACT As String,  _
                    ByVal Original_NBK12_NUM_CRED As String,  _
                    ByVal Original_BK12_NUM_EXP_PAIDONTIME As String,  _
                    ByVal Original_BK12_PCT_PROMT As String,  _
                    ByVal Original_NBK12_PCT_PROMT As String,  _
                    ByVal Original_BK12_PCT_SAT As String,  _
                    ByVal Original_NBK12_PCT_SAT As String,  _
                    ByVal Original_BK24_PCT_60PLUS As String,  _
                    ByVal Original_NBK24_PCT_60PLUS As String,  _
                    ByVal Original_NBK12_COMM_PCT_PLUS As String,  _
                    ByVal Original_BK12_PCT_90PLUS As String,  _
                    ByVal Original_BK12_DPD_PROM As String,  _
                    ByVal Original_BK12_IND_QCRA As String,  _
                    ByVal Original_BK12_MAX_CREDIT_AMT As String,  _
                    ByVal Original_MONTHS_ON_FILE_BANKING As String,  _
                    ByVal Original_MONTHS_SINCE_LAST_OPEN_BANKING As String,  _
                    ByVal Original_BK_IND_PMOR As String,  _
                    ByVal Original_BK24_IND_EXP As String,  _
                    ByVal p2 As String,  _
                    ByVal Original_BK_DEUDA_TOT As String,  _
                    ByVal Original_BK_DEUDA_CP As String,  _
                    ByVal Original_NBK_DEUDA_TOT As String,  _
                    ByVal Original_NBK_DEUDA_CP As String,  _
                    ByVal Original_DEUDA_TOT As String,  _
                    ByVal Original_DEUDA_TOT_CP As String) As Integer
            Return Me.Update(RFC, Mes, BK12_CLEAN, BK12_NUM_CRED, BK12_NUM_TC_ACT, NBK12_NUM_CRED, BK12_NUM_EXP_PAIDONTIME, BK12_PCT_PROMT, NBK12_PCT_PROMT, BK12_PCT_SAT, NBK12_PCT_SAT, BK24_PCT_60PLUS, NBK24_PCT_60PLUS, NBK12_COMM_PCT_PLUS, BK12_PCT_90PLUS, BK12_DPD_PROM, BK12_IND_QCRA, BK12_MAX_CREDIT_AMT, MONTHS_ON_FILE_BANKING, MONTHS_SINCE_LAST_OPEN_BANKING, BK_IND_PMOR, BK24_IND_EXP, p1, BK_DEUDA_TOT, BK_DEUDA_CP, NBK_DEUDA_TOT, NBK_DEUDA_CP, DEUDA_TOT, DEUDA_TOT_CP, Original_id, Original_RFC, Original_Mes, Original_BK12_CLEAN, Original_BK12_NUM_CRED, Original_BK12_NUM_TC_ACT, Original_NBK12_NUM_CRED, Original_BK12_NUM_EXP_PAIDONTIME, Original_BK12_PCT_PROMT, Original_NBK12_PCT_PROMT, Original_BK12_PCT_SAT, Original_NBK12_PCT_SAT, Original_BK24_PCT_60PLUS, Original_NBK24_PCT_60PLUS, Original_NBK12_COMM_PCT_PLUS, Original_BK12_PCT_90PLUS, Original_BK12_DPD_PROM, Original_BK12_IND_QCRA, Original_BK12_MAX_CREDIT_AMT, Original_MONTHS_ON_FILE_BANKING, Original_MONTHS_SINCE_LAST_OPEN_BANKING, Original_BK_IND_PMOR, Original_BK24_IND_EXP, p2, Original_BK_DEUDA_TOT, Original_BK_DEUDA_CP, Original_NBK_DEUDA_TOT, Original_NBK_DEUDA_CP, Original_DEUDA_TOT, Original_DEUDA_TOT_CP, Original_id)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function CorrigeCampos() As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteALL() As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteRFC(ByVal RFC As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (RFC Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(RFC,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FIRA_CALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FIRA_CAL"
            tableMapping.ColumnMappings.Add("IDCONSULTA", "IDCONSULTA")
            tableMapping.ColumnMappings.Add("TIPORESPUESTA", "TIPORESPUESTA")
            tableMapping.ColumnMappings.Add("FOLIO", "FOLIO")
            tableMapping.ColumnMappings.Add("FECHA_CONSULTA", "FECHA_CONSULTA")
            tableMapping.ColumnMappings.Add("RFC", "RFC")
            tableMapping.ColumnMappings.Add("PRIMERNOMBRE", "PRIMERNOMBRE")
            tableMapping.ColumnMappings.Add("SEGUNDONOMBRE", "SEGUNDONOMBRE")
            tableMapping.ColumnMappings.Add("APELLIDOPATERNO", "APELLIDOPATERNO")
            tableMapping.ColumnMappings.Add("APELLIDOMATERNO", "APELLIDOMATERNO")
            tableMapping.ColumnMappings.Add("IDCARACTERISTICA", "IDCARACTERISTICA")
            tableMapping.ColumnMappings.Add("NOMBRECARACTERISTICA", "NOMBRECARACTERISTICA")
            tableMapping.ColumnMappings.Add("VALORCARACTERISTICA", "VALORCARACTERISTICA")
            tableMapping.ColumnMappings.Add("ERRORCARACTERISTICA", "ERRORCARACTERISTICA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [FIRA_CAL] WHERE (([IDCONSULTA] = @Original_IDCONSULTA) AND ((@IsNull"& _ 
                "_TIPORESPUESTA = 1 AND [TIPORESPUESTA] IS NULL) OR ([TIPORESPUESTA] = @Original_"& _ 
                "TIPORESPUESTA)) AND ([FOLIO] = @Original_FOLIO) AND ((@IsNull_FECHA_CONSULTA = 1"& _ 
                " AND [FECHA_CONSULTA] IS NULL) OR ([FECHA_CONSULTA] = @Original_FECHA_CONSULTA))"& _ 
                " AND ((@IsNull_RFC = 1 AND [RFC] IS NULL) OR ([RFC] = @Original_RFC)) AND ((@IsN"& _ 
                "ull_PRIMERNOMBRE = 1 AND [PRIMERNOMBRE] IS NULL) OR ([PRIMERNOMBRE] = @Original_"& _ 
                "PRIMERNOMBRE)) AND ((@IsNull_SEGUNDONOMBRE = 1 AND [SEGUNDONOMBRE] IS NULL) OR ("& _ 
                "[SEGUNDONOMBRE] = @Original_SEGUNDONOMBRE)) AND ((@IsNull_APELLIDOPATERNO = 1 AN"& _ 
                "D [APELLIDOPATERNO] IS NULL) OR ([APELLIDOPATERNO] = @Original_APELLIDOPATERNO))"& _ 
                " AND ((@IsNull_APELLIDOMATERNO = 1 AND [APELLIDOMATERNO] IS NULL) OR ([APELLIDOM"& _ 
                "ATERNO] = @Original_APELLIDOMATERNO)) AND ([IDCARACTERISTICA] = @Original_IDCARA"& _ 
                "CTERISTICA) AND ((@IsNull_NOMBRECARACTERISTICA = 1 AND [NOMBRECARACTERISTICA] IS"& _ 
                " NULL) OR ([NOMBRECARACTERISTICA] = @Original_NOMBRECARACTERISTICA)) AND ((@IsNu"& _ 
                "ll_VALORCARACTERISTICA = 1 AND [VALORCARACTERISTICA] IS NULL) OR ([VALORCARACTER"& _ 
                "ISTICA] = @Original_VALORCARACTERISTICA)) AND ((@IsNull_ERRORCARACTERISTICA = 1 "& _ 
                "AND [ERRORCARACTERISTICA] IS NULL) OR ([ERRORCARACTERISTICA] = @Original_ERRORCA"& _ 
                "RACTERISTICA)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDCONSULTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCONSULTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPORESPUESTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPORESPUESTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPORESPUESTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPORESPUESTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FOLIO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FOLIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_CONSULTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_CONSULTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_CONSULTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_CONSULTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RFC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RFC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRIMERNOMBRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIMERNOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRIMERNOMBRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIMERNOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SEGUNDONOMBRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEGUNDONOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SEGUNDONOMBRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEGUNDONOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_APELLIDOPATERNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOPATERNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_APELLIDOPATERNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOPATERNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_APELLIDOMATERNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOMATERNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_APELLIDOMATERNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOMATERNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDCARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCARACTERISTICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NOMBRECARACTERISTICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRECARACTERISTICA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NOMBRECARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRECARACTERISTICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALORCARACTERISTICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALORCARACTERISTICA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALORCARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALORCARACTERISTICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ERRORCARACTERISTICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ERRORCARACTERISTICA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ERRORCARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ERRORCARACTERISTICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FIRA_CAL] ([IDCONSULTA], [TIPORESPUESTA], [FOLIO], [FECHA_CONSULTA],"& _ 
                " [RFC], [PRIMERNOMBRE], [SEGUNDONOMBRE], [APELLIDOPATERNO], [APELLIDOMATERNO], ["& _ 
                "IDCARACTERISTICA], [NOMBRECARACTERISTICA], [VALORCARACTERISTICA], [ERRORCARACTER"& _ 
                "ISTICA]) VALUES (@IDCONSULTA, @TIPORESPUESTA, @FOLIO, @FECHA_CONSULTA, @RFC, @PR"& _ 
                "IMERNOMBRE, @SEGUNDONOMBRE, @APELLIDOPATERNO, @APELLIDOMATERNO, @IDCARACTERISTIC"& _ 
                "A, @NOMBRECARACTERISTICA, @VALORCARACTERISTICA, @ERRORCARACTERISTICA);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT I"& _ 
                "DCONSULTA, TIPORESPUESTA, FOLIO, FECHA_CONSULTA, RFC, PRIMERNOMBRE, SEGUNDONOMBR"& _ 
                "E, APELLIDOPATERNO, APELLIDOMATERNO, IDCARACTERISTICA, NOMBRECARACTERISTICA, VAL"& _ 
                "ORCARACTERISTICA, ERRORCARACTERISTICA FROM FIRA_CAL WHERE (FOLIO = @FOLIO) AND ("& _ 
                "IDCARACTERISTICA = @IDCARACTERISTICA) AND (IDCONSULTA = @IDCONSULTA)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCONSULTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCONSULTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPORESPUESTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPORESPUESTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FOLIO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FOLIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_CONSULTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_CONSULTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RFC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRIMERNOMBRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIMERNOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEGUNDONOMBRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEGUNDONOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDOPATERNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOPATERNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDOMATERNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOMATERNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCARACTERISTICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRECARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRECARACTERISTICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALORCARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALORCARACTERISTICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ERRORCARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ERRORCARACTERISTICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [FIRA_CAL] SET [IDCONSULTA] = @IDCONSULTA, [TIPORESPUESTA] = @TIPORESPUEST"& _ 
                "A, [FOLIO] = @FOLIO, [FECHA_CONSULTA] = @FECHA_CONSULTA, [RFC] = @RFC, [PRIMERNO"& _ 
                "MBRE] = @PRIMERNOMBRE, [SEGUNDONOMBRE] = @SEGUNDONOMBRE, [APELLIDOPATERNO] = @AP"& _ 
                "ELLIDOPATERNO, [APELLIDOMATERNO] = @APELLIDOMATERNO, [IDCARACTERISTICA] = @IDCAR"& _ 
                "ACTERISTICA, [NOMBRECARACTERISTICA] = @NOMBRECARACTERISTICA, [VALORCARACTERISTIC"& _ 
                "A] = @VALORCARACTERISTICA, [ERRORCARACTERISTICA] = @ERRORCARACTERISTICA WHERE (("& _ 
                "[IDCONSULTA] = @Original_IDCONSULTA) AND ((@IsNull_TIPORESPUESTA = 1 AND [TIPORE"& _ 
                "SPUESTA] IS NULL) OR ([TIPORESPUESTA] = @Original_TIPORESPUESTA)) AND ([FOLIO] ="& _ 
                " @Original_FOLIO) AND ((@IsNull_FECHA_CONSULTA = 1 AND [FECHA_CONSULTA] IS NULL)"& _ 
                " OR ([FECHA_CONSULTA] = @Original_FECHA_CONSULTA)) AND ((@IsNull_RFC = 1 AND [RF"& _ 
                "C] IS NULL) OR ([RFC] = @Original_RFC)) AND ((@IsNull_PRIMERNOMBRE = 1 AND [PRIM"& _ 
                "ERNOMBRE] IS NULL) OR ([PRIMERNOMBRE] = @Original_PRIMERNOMBRE)) AND ((@IsNull_S"& _ 
                "EGUNDONOMBRE = 1 AND [SEGUNDONOMBRE] IS NULL) OR ([SEGUNDONOMBRE] = @Original_SE"& _ 
                "GUNDONOMBRE)) AND ((@IsNull_APELLIDOPATERNO = 1 AND [APELLIDOPATERNO] IS NULL) O"& _ 
                "R ([APELLIDOPATERNO] = @Original_APELLIDOPATERNO)) AND ((@IsNull_APELLIDOMATERNO"& _ 
                " = 1 AND [APELLIDOMATERNO] IS NULL) OR ([APELLIDOMATERNO] = @Original_APELLIDOMA"& _ 
                "TERNO)) AND ([IDCARACTERISTICA] = @Original_IDCARACTERISTICA) AND ((@IsNull_NOMB"& _ 
                "RECARACTERISTICA = 1 AND [NOMBRECARACTERISTICA] IS NULL) OR ([NOMBRECARACTERISTI"& _ 
                "CA] = @Original_NOMBRECARACTERISTICA)) AND ((@IsNull_VALORCARACTERISTICA = 1 AND"& _ 
                " [VALORCARACTERISTICA] IS NULL) OR ([VALORCARACTERISTICA] = @Original_VALORCARAC"& _ 
                "TERISTICA)) AND ((@IsNull_ERRORCARACTERISTICA = 1 AND [ERRORCARACTERISTICA] IS N"& _ 
                "ULL) OR ([ERRORCARACTERISTICA] = @Original_ERRORCARACTERISTICA)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT IDCON"& _ 
                "SULTA, TIPORESPUESTA, FOLIO, FECHA_CONSULTA, RFC, PRIMERNOMBRE, SEGUNDONOMBRE, A"& _ 
                "PELLIDOPATERNO, APELLIDOMATERNO, IDCARACTERISTICA, NOMBRECARACTERISTICA, VALORCA"& _ 
                "RACTERISTICA, ERRORCARACTERISTICA FROM FIRA_CAL WHERE (FOLIO = @FOLIO) AND (IDCA"& _ 
                "RACTERISTICA = @IDCARACTERISTICA) AND (IDCONSULTA = @IDCONSULTA)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCONSULTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCONSULTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPORESPUESTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPORESPUESTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FOLIO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FOLIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA_CONSULTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_CONSULTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RFC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRIMERNOMBRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIMERNOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEGUNDONOMBRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEGUNDONOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDOPATERNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOPATERNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDOMATERNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOMATERNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCARACTERISTICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRECARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRECARACTERISTICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALORCARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALORCARACTERISTICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ERRORCARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ERRORCARACTERISTICA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDCONSULTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCONSULTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPORESPUESTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPORESPUESTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPORESPUESTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPORESPUESTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FOLIO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FOLIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA_CONSULTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_CONSULTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA_CONSULTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA_CONSULTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RFC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RFC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRIMERNOMBRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIMERNOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRIMERNOMBRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIMERNOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SEGUNDONOMBRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEGUNDONOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SEGUNDONOMBRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEGUNDONOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_APELLIDOPATERNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOPATERNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_APELLIDOPATERNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOPATERNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_APELLIDOMATERNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOMATERNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_APELLIDOMATERNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDOMATERNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDCARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCARACTERISTICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NOMBRECARACTERISTICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRECARACTERISTICA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NOMBRECARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRECARACTERISTICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALORCARACTERISTICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALORCARACTERISTICA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALORCARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALORCARACTERISTICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ERRORCARACTERISTICA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ERRORCARACTERISTICA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ERRORCARACTERISTICA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ERRORCARACTERISTICA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=server-raid;Initial Catalog=production;Persist Security Info=True;Use"& _ 
                "r ID=User_PRO;Password=User_PRO2015"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        IDCONSULTA, TIPORESPUESTA, FOLIO, FECHA_CONSULTA, RFC, PRIMERNOMBRE"& _ 
                ", SEGUNDONOMBRE, APELLIDOPATERNO, APELLIDOMATERNO, IDCARACTERISTICA, NOMBRECARAC"& _ 
                "TERISTICA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VALORCARACTERISTICA, ERRORCARACTERISTICA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "FROM            FIRA_CAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM FIRA_CAL"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "DELETE FROM FIRA_CAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (RFC = @RFC)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RFC", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "RFC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As FinagilDS.FIRA_CALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As FinagilDS.FIRA_CALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As FinagilDS.FIRA_CALDataTable = New FinagilDS.FIRA_CALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As FinagilDS.FIRA_CALDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As FinagilDS) As Integer
            Return Me.Adapter.Update(dataSet, "FIRA_CAL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_IDCONSULTA As String, ByVal Original_TIPORESPUESTA As String, ByVal Original_FOLIO As String, ByVal Original_FECHA_CONSULTA As String, ByVal Original_RFC As String, ByVal Original_PRIMERNOMBRE As String, ByVal Original_SEGUNDONOMBRE As String, ByVal Original_APELLIDOPATERNO As String, ByVal Original_APELLIDOMATERNO As String, ByVal Original_IDCARACTERISTICA As String, ByVal Original_NOMBRECARACTERISTICA As String, ByVal Original_VALORCARACTERISTICA As String, ByVal Original_ERRORCARACTERISTICA As String) As Integer
            If (Original_IDCONSULTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IDCONSULTA")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_IDCONSULTA,String)
            End If
            If (Original_TIPORESPUESTA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_TIPORESPUESTA,String)
            End If
            If (Original_FOLIO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FOLIO")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_FOLIO,String)
            End If
            If (Original_FECHA_CONSULTA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_FECHA_CONSULTA,String)
            End If
            If (Original_RFC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_RFC,String)
            End If
            If (Original_PRIMERNOMBRE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_PRIMERNOMBRE,String)
            End If
            If (Original_SEGUNDONOMBRE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_SEGUNDONOMBRE,String)
            End If
            If (Original_APELLIDOPATERNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_APELLIDOPATERNO,String)
            End If
            If (Original_APELLIDOMATERNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_APELLIDOMATERNO,String)
            End If
            If (Original_IDCARACTERISTICA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IDCARACTERISTICA")
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_IDCARACTERISTICA,String)
            End If
            If (Original_NOMBRECARACTERISTICA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_NOMBRECARACTERISTICA,String)
            End If
            If (Original_VALORCARACTERISTICA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_VALORCARACTERISTICA,String)
            End If
            If (Original_ERRORCARACTERISTICA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_ERRORCARACTERISTICA,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal IDCONSULTA As String, ByVal TIPORESPUESTA As String, ByVal FOLIO As String, ByVal FECHA_CONSULTA As String, ByVal RFC As String, ByVal PRIMERNOMBRE As String, ByVal SEGUNDONOMBRE As String, ByVal APELLIDOPATERNO As String, ByVal APELLIDOMATERNO As String, ByVal IDCARACTERISTICA As String, ByVal NOMBRECARACTERISTICA As String, ByVal VALORCARACTERISTICA As String, ByVal ERRORCARACTERISTICA As String) As Integer
            If (IDCONSULTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCONSULTA")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(IDCONSULTA,String)
            End If
            If (TIPORESPUESTA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TIPORESPUESTA,String)
            End If
            If (FOLIO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FOLIO")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(FOLIO,String)
            End If
            If (FECHA_CONSULTA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FECHA_CONSULTA,String)
            End If
            If (RFC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(RFC,String)
            End If
            If (PRIMERNOMBRE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PRIMERNOMBRE,String)
            End If
            If (SEGUNDONOMBRE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SEGUNDONOMBRE,String)
            End If
            If (APELLIDOPATERNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(APELLIDOPATERNO,String)
            End If
            If (APELLIDOMATERNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(APELLIDOMATERNO,String)
            End If
            If (IDCARACTERISTICA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCARACTERISTICA")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(IDCARACTERISTICA,String)
            End If
            If (NOMBRECARACTERISTICA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(NOMBRECARACTERISTICA,String)
            End If
            If (VALORCARACTERISTICA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(VALORCARACTERISTICA,String)
            End If
            If (ERRORCARACTERISTICA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(ERRORCARACTERISTICA,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal IDCONSULTA As String,  _
                    ByVal TIPORESPUESTA As String,  _
                    ByVal FOLIO As String,  _
                    ByVal FECHA_CONSULTA As String,  _
                    ByVal RFC As String,  _
                    ByVal PRIMERNOMBRE As String,  _
                    ByVal SEGUNDONOMBRE As String,  _
                    ByVal APELLIDOPATERNO As String,  _
                    ByVal APELLIDOMATERNO As String,  _
                    ByVal IDCARACTERISTICA As String,  _
                    ByVal NOMBRECARACTERISTICA As String,  _
                    ByVal VALORCARACTERISTICA As String,  _
                    ByVal ERRORCARACTERISTICA As String,  _
                    ByVal Original_IDCONSULTA As String,  _
                    ByVal Original_TIPORESPUESTA As String,  _
                    ByVal Original_FOLIO As String,  _
                    ByVal Original_FECHA_CONSULTA As String,  _
                    ByVal Original_RFC As String,  _
                    ByVal Original_PRIMERNOMBRE As String,  _
                    ByVal Original_SEGUNDONOMBRE As String,  _
                    ByVal Original_APELLIDOPATERNO As String,  _
                    ByVal Original_APELLIDOMATERNO As String,  _
                    ByVal Original_IDCARACTERISTICA As String,  _
                    ByVal Original_NOMBRECARACTERISTICA As String,  _
                    ByVal Original_VALORCARACTERISTICA As String,  _
                    ByVal Original_ERRORCARACTERISTICA As String) As Integer
            If (IDCONSULTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCONSULTA")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(IDCONSULTA,String)
            End If
            If (TIPORESPUESTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TIPORESPUESTA,String)
            End If
            If (FOLIO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FOLIO")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FOLIO,String)
            End If
            If (FECHA_CONSULTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FECHA_CONSULTA,String)
            End If
            If (RFC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(RFC,String)
            End If
            If (PRIMERNOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PRIMERNOMBRE,String)
            End If
            If (SEGUNDONOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(SEGUNDONOMBRE,String)
            End If
            If (APELLIDOPATERNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(APELLIDOPATERNO,String)
            End If
            If (APELLIDOMATERNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(APELLIDOMATERNO,String)
            End If
            If (IDCARACTERISTICA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCARACTERISTICA")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(IDCARACTERISTICA,String)
            End If
            If (NOMBRECARACTERISTICA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(NOMBRECARACTERISTICA,String)
            End If
            If (VALORCARACTERISTICA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(VALORCARACTERISTICA,String)
            End If
            If (ERRORCARACTERISTICA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ERRORCARACTERISTICA,String)
            End If
            If (Original_IDCONSULTA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IDCONSULTA")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_IDCONSULTA,String)
            End If
            If (Original_TIPORESPUESTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_TIPORESPUESTA,String)
            End If
            If (Original_FOLIO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FOLIO")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_FOLIO,String)
            End If
            If (Original_FECHA_CONSULTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_FECHA_CONSULTA,String)
            End If
            If (Original_RFC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_RFC,String)
            End If
            If (Original_PRIMERNOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_PRIMERNOMBRE,String)
            End If
            If (Original_SEGUNDONOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_SEGUNDONOMBRE,String)
            End If
            If (Original_APELLIDOPATERNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_APELLIDOPATERNO,String)
            End If
            If (Original_APELLIDOMATERNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_APELLIDOMATERNO,String)
            End If
            If (Original_IDCARACTERISTICA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IDCARACTERISTICA")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_IDCARACTERISTICA,String)
            End If
            If (Original_NOMBRECARACTERISTICA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_NOMBRECARACTERISTICA,String)
            End If
            If (Original_VALORCARACTERISTICA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_VALORCARACTERISTICA,String)
            End If
            If (Original_ERRORCARACTERISTICA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_ERRORCARACTERISTICA,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal TIPORESPUESTA As String,  _
                    ByVal FOLIO As String,  _
                    ByVal FECHA_CONSULTA As String,  _
                    ByVal RFC As String,  _
                    ByVal PRIMERNOMBRE As String,  _
                    ByVal SEGUNDONOMBRE As String,  _
                    ByVal APELLIDOPATERNO As String,  _
                    ByVal APELLIDOMATERNO As String,  _
                    ByVal IDCARACTERISTICA As String,  _
                    ByVal NOMBRECARACTERISTICA As String,  _
                    ByVal VALORCARACTERISTICA As String,  _
                    ByVal ERRORCARACTERISTICA As String,  _
                    ByVal Original_IDCONSULTA As String,  _
                    ByVal Original_TIPORESPUESTA As String,  _
                    ByVal Original_FOLIO As String,  _
                    ByVal Original_FECHA_CONSULTA As String,  _
                    ByVal Original_RFC As String,  _
                    ByVal Original_PRIMERNOMBRE As String,  _
                    ByVal Original_SEGUNDONOMBRE As String,  _
                    ByVal Original_APELLIDOPATERNO As String,  _
                    ByVal Original_APELLIDOMATERNO As String,  _
                    ByVal Original_IDCARACTERISTICA As String,  _
                    ByVal Original_NOMBRECARACTERISTICA As String,  _
                    ByVal Original_VALORCARACTERISTICA As String,  _
                    ByVal Original_ERRORCARACTERISTICA As String) As Integer
            Return Me.Update(Original_IDCONSULTA, TIPORESPUESTA, FOLIO, FECHA_CONSULTA, RFC, PRIMERNOMBRE, SEGUNDONOMBRE, APELLIDOPATERNO, APELLIDOMATERNO, IDCARACTERISTICA, NOMBRECARACTERISTICA, VALORCARACTERISTICA, ERRORCARACTERISTICA, Original_IDCONSULTA, Original_TIPORESPUESTA, Original_FOLIO, Original_FECHA_CONSULTA, Original_RFC, Original_PRIMERNOMBRE, Original_SEGUNDONOMBRE, Original_APELLIDOPATERNO, Original_APELLIDOMATERNO, Original_IDCARACTERISTICA, Original_NOMBRECARACTERISTICA, Original_VALORCARACTERISTICA, Original_ERRORCARACTERISTICA)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteAll() As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteRFC(ByVal RFC As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (RFC Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(RFC,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _bC_BuroDatosTableAdapter As BC_BuroDatosTableAdapter
        
        Private _fIRA_CALTableAdapter As FIRA_CALTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property BC_BuroDatosTableAdapter() As BC_BuroDatosTableAdapter
            Get
                Return Me._bC_BuroDatosTableAdapter
            End Get
            Set
                Me._bC_BuroDatosTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property FIRA_CALTableAdapter() As FIRA_CALTableAdapter
            Get
                Return Me._fIRA_CALTableAdapter
            End Get
            Set
                Me._fIRA_CALTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._bC_BuroDatosTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._bC_BuroDatosTableAdapter.Connection) Is Nothing)) Then
                    Return Me._bC_BuroDatosTableAdapter.Connection
                End If
                If ((Not (Me._fIRA_CALTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._fIRA_CALTableAdapter.Connection) Is Nothing)) Then
                    Return Me._fIRA_CALTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._bC_BuroDatosTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._fIRA_CALTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As FinagilDS, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._bC_BuroDatosTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.BC_BuroDatos.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._bC_BuroDatosTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._fIRA_CALTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.FIRA_CAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._fIRA_CALTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As FinagilDS, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._bC_BuroDatosTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.BC_BuroDatos.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._bC_BuroDatosTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._fIRA_CALTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.FIRA_CAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._fIRA_CALTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As FinagilDS, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._fIRA_CALTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.FIRA_CAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._fIRA_CALTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._bC_BuroDatosTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.BC_BuroDatos.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._bC_BuroDatosTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As FinagilDS) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._bC_BuroDatosTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._bC_BuroDatosTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._fIRA_CALTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._fIRA_CALTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._bC_BuroDatosTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._bC_BuroDatosTableAdapter, Me._bC_BuroDatosTableAdapter.Connection)
                    Me._bC_BuroDatosTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._bC_BuroDatosTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._bC_BuroDatosTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._bC_BuroDatosTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._bC_BuroDatosTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._fIRA_CALTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._fIRA_CALTableAdapter, Me._fIRA_CALTableAdapter.Connection)
                    Me._fIRA_CALTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._fIRA_CALTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._fIRA_CALTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._fIRA_CALTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._fIRA_CALTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._bC_BuroDatosTableAdapter) Is Nothing) Then
                    Me._bC_BuroDatosTableAdapter.Connection = CType(revertConnections(Me._bC_BuroDatosTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._bC_BuroDatosTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._fIRA_CALTableAdapter) Is Nothing) Then
                    Me._fIRA_CALTableAdapter.Connection = CType(revertConnections(Me._fIRA_CALTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._fIRA_CALTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
